{"version":3,"file":"pools-18fd7fb0.js","sources":["../../src/types/pools.ts"],"sourcesContent":["import { Protocol } from '@/composables/useProtocols';\nimport { PoolType } from '@/services/pool/types';\n\nexport enum PoolTypeFilter {\n  Weighted = 'Weighted',\n  Stable = 'Stable',\n  CLP = 'CLP',\n  LBP = 'LBP',\n}\n\nexport enum PoolAttributeFilter {\n  New = 'New',\n}\n\nexport type PoolFilterOptions = Ref<{\n  poolIds?: string[];\n  tokens?: string[];\n  poolTypes?: PoolType[];\n  poolAttributes?: PoolAttributeFilter[];\n  useExactTokens?: boolean;\n  pageSize?: number;\n  first?: number;\n  sortField?: string;\n}>;\n\nexport type FactoryType =\n  | 'oracleWeightedPool'\n  | 'weightedPool'\n  | 'stablePool'\n  | 'managedPool'\n  | 'liquidityBootstrappingPool'\n  | 'boostedPool'\n  | 'composableStablePool'\n  | 'fx'\n  | 'eulerLinear'\n  | 'gyroE'\n  | 'erc4626Linear';\n\nexport enum PoolFeature {\n  Boosted = 'boosted',\n  CLP = 'clp',\n}\n\nexport type PoolFeatures = {\n  [key in PoolFeature]?: {\n    featureProtocols?: Protocol[];\n  };\n};\n\nexport type PoolMetadata = {\n  name?: string;\n  hasIcon?: boolean;\n  features?: PoolFeatures;\n};\n\nexport enum RiskKey {\n  General = 'general-risks',\n  Economic = 'economic-risk',\n  ToxicToken = 'toxic-token-risk',\n  RebaseToken = 'rebasing-tokens',\n  Governance = 'governance-risk',\n  FlashLoan = 'flash-loans-risk',\n  JoinExit = 'join-exit-risk',\n  ImpermanentLoss = 'impermanent-loss-risk',\n  UI = 'ui-risk',\n  Regulatory = 'regulatory-risk',\n  PoolType = 'pool-type-risk',\n  Oracle = 'oracles',\n  Network = 'network-risks',\n  Weighted = 'weighted-pools',\n  Stable = 'stable-pools',\n  ComposableStable = 'composable-pools',\n  MetaStable = 'meta-stable-pools',\n  Boosted = 'boosted-pools',\n  Arbitrum = 'arbitrum',\n  Polygon = 'polygon',\n  Optimism = 'optimism',\n  Gnosis = 'gnosis',\n  Mutable = 'mutable-attributes-risk',\n  Composability = 'composability-risk',\n  RateProvider = 'rate-provider-risk',\n  RateProviderBridge = 'rate-provider-bridges',\n}\n\nexport type NamedPools = {\n  staBAL: string;\n  bbAaveUSD: {\n    v1: string;\n    v2: string;\n    v3: string;\n  };\n  xMatic: {\n    v1: string;\n    v2: string;\n  };\n  stMatic: {\n    v1: string;\n    v2: string;\n  };\n  mai4: {\n    mai4: string;\n    maiBbaUsd: string;\n  };\n  veBAL: string;\n  veLIT: string;\n  veUSH: string;\n};\n\nexport type DeprecatedDetails = {\n  newPool?: string;\n  suggestedPools?: string[];\n  description?: string;\n  title?: string;\n};\n\nexport type NewVersionAvailableDetails = DeprecatedDetails;\n\nexport enum PoolMigrationType {\n  AAVE_BOOSTED_POOL = 'aaveBoostedPool',\n  STABAL3_POOL = 'stabal3Pool',\n  MAI_POOL = 'maiPool',\n  STMATIC_POOL = 'stmaticPool',\n  XMATIC_POOL = 'xmaticPool',\n}\n\nexport type PoolMigrationInfo = {\n  type: PoolMigrationType;\n  fromPoolId: string;\n  toPoolId: string;\n  riskI18nLabels?: string[];\n  showOldVHint?: boolean;\n};\n\nexport type Pools = {\n  IdsMap: Partial<NamedPools>;\n  Pagination: {\n    PerPage: number;\n    PerPool: number;\n    PerPoolInitial: number;\n  };\n  BoostsEnabled: boolean;\n  DelegateOwner: string;\n  ZeroAddress: string;\n  DynamicFees: {\n    Gauntlet: string[];\n  };\n  BlockList: string[];\n  IncludedPoolTypes: string[];\n  Stable: {\n    AllowList: string[];\n  };\n  Investment: {\n    AllowList: string[];\n  };\n  Weighted: {\n    AllowList: string[];\n  };\n  Factories: Record<string, FactoryType>;\n  Stakable: {\n    // Pools to be included in the voting gauges list.\n    VotingGaugePools: string[];\n    // Pools that have additional rewards and therefore should be stakable but are not included in the VotingGaugePools list.\n    AllowList: string[];\n  };\n  Metadata: Record<string, PoolMetadata>;\n  Deep: string[];\n  BoostedApr: string[];\n  DisabledJoins: string[];\n  ExitViaInternalBalance?: string[];\n  BrandedRedirect?: Partial<Record<string, string>>;\n  Deprecated?: Record<string, DeprecatedDetails>;\n  NewVersionAvailable?: Record<string, NewVersionAvailableDetails>;\n  GaugeMigration?: Record<string, DeprecatedDetails>;\n  Migrations?: Record<string, PoolMigrationInfo>;\n  Issues?: Partial<Record<PoolWarning, string[]>>;\n  Risks?: Record<string, RiskKey[]>;\n};\n\nexport enum PoolWarning {\n  PoolProtocolFeeVulnWarning = 'poolProtocolFeeVulnWarning',\n  PoolOwnerVulnWarningGovernanceMigrate = 'poolOwnerVulnWarningGovernanceMigrate',\n  PoolOwnerVulnWarningGovernanceWithdraw = 'poolOwnerVulnWarningGovernanceWithdraw',\n  PoolOwnerVulnWarningGovernance = 'poolOwnerVulnWarningGovernance',\n  PoolOwnerVulnWarningEcosystem = 'poolOwnerVulnWarningEcosystem',\n  PoolOwnerVulnWarningEcosystemMigrate = 'poolOwnerVulnWarningEcosystemMigrate',\n  RenBTCWarning = 'renBTCWarning',\n  EulerBoostedWarning = 'eulerBoostedWarning',\n  EulerRecoveryModeWarning = 'eulerRecoveryModeWarning',\n  CspPoolVulnWarning = 'cspPoolVulnWarning',\n}\n"],"names":["PoolTypeFilter","PoolAttributeFilter","PoolFeature","RiskKey","PoolWarning"],"mappings":"AAGY,IAAAA,GAAAA,IACVA,EAAA,SAAW,WACXA,EAAA,OAAS,SACTA,EAAA,IAAM,MACNA,EAAA,IAAM,MAJIA,IAAAA,GAAA,CAAA,CAAA,EAOAC,GAAAA,IACVA,EAAA,IAAM,MADIA,IAAAA,GAAA,CAAA,CAAA,EA4BAC,GAAAA,IACVA,EAAA,QAAU,UACVA,EAAA,IAAM,MAFIA,IAAAA,GAAA,CAAA,CAAA,EAiBAC,GAAAA,IACVA,EAAA,QAAU,gBACVA,EAAA,SAAW,gBACXA,EAAA,WAAa,mBACbA,EAAA,YAAc,kBACdA,EAAA,WAAa,kBACbA,EAAA,UAAY,mBACZA,EAAA,SAAW,iBACXA,EAAA,gBAAkB,wBAClBA,EAAA,GAAK,UACLA,EAAA,WAAa,kBACbA,EAAA,SAAW,iBACXA,EAAA,OAAS,UACTA,EAAA,QAAU,gBACVA,EAAA,SAAW,iBACXA,EAAA,OAAS,eACTA,EAAA,iBAAmB,mBACnBA,EAAA,WAAa,oBACbA,EAAA,QAAU,gBACVA,EAAA,SAAW,WACXA,EAAA,QAAU,UACVA,EAAA,SAAW,WACXA,EAAA,OAAS,SACTA,EAAA,QAAU,0BACVA,EAAA,cAAgB,qBAChBA,EAAA,aAAe,qBACfA,EAAA,mBAAqB,wBA1BXA,IAAAA,GAAA,CAAA,CAAA,EA2HAC,GAAAA,IACVA,EAAA,2BAA6B,6BAC7BA,EAAA,sCAAwC,wCACxCA,EAAA,uCAAyC,yCACzCA,EAAA,+BAAiC,iCACjCA,EAAA,8BAAgC,gCAChCA,EAAA,qCAAuC,uCACvCA,EAAA,cAAgB,gBAChBA,EAAA,oBAAsB,sBACtBA,EAAA,yBAA2B,2BAC3BA,EAAA,mBAAqB,qBAVXA,IAAAA,GAAA,CAAA,CAAA"}