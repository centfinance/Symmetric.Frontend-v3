var O=Object.defineProperty;var U=(a,e,t)=>e in a?O(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var B=(a,e,t)=>(U(a,typeof e!="symbol"?e+"":e,t),t);import{aq as v,aZ as w,a_ as h,a$ as j,aT as g,b0 as q,aP as P,b1 as _,b2 as Q,aW as F,aX as x}from"./BalBtn-cca6788c.js";import{a4 as C,n as S,N as I,Q as f,o as b,T as M,Z as y,a5 as R}from"./connector-16147cef.js";import{aj as p,u as m,ak as W}from"./runtime-core.esm-bundler-558f8953.js";import{B as G,u as K}from"./useVeBalLockInfoQuery-e92ea085.js";import{L as N}from"./liquidity-gauge-c56bdf84.js";import{l as z}from"./usePoolHelpers-eb955974.js";import{b as $}from"./api-e32fdf3d.js";function k(a,e){console.trace(a,{cause:e})}function Y(a,e={}){const{account:t,isWalletReady:n}=v(),s=p(w.User.Pool.StakedShares(a,t)),r=m(()=>!!a.value&&n.value),o=async()=>{try{if(!a.value)return{};let u={};const l=j(),c=new l;a.value.forEach(d=>{c.call({key:`${d.gauge.poolId}.${d.gauge.id}`,address:d.gauge.id,function:"balanceOf",abi:["function balanceOf(address) returns (uint256)"],params:[t.value]})}),u=await c.execute();const T={};for(const d in u){const D=u[d],A=Object.values(D).map(L=>g(L)),E=C(A).toString();T[d]=E}return T}catch(u){throw k("Failed to fetch staked share balance",u),Error}},i=p({enabled:r,refetchOnWindowFocus:!1,...e});return h(s,o,i)}const Z=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IERC20",name:"votingEscrow",type:"address"},{internalType:"contract IVeDelegation",name:"delegation",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newImplementation",type:"address"}],name:"DelegationImplementationUpdated",type:"event"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"adjustedBalanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"adjusted_balance_of",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDelegationImplementation",outputs:[{internalType:"contract IVeDelegation",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVotingEscrow",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"killDelegation",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IVeDelegation",name:"delegation",type:"address"}],name:"setDelegation",outputs:[],stateMutability:"nonpayable",type:"function"}],J=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IERC20",name:"votingEscrow",type:"address"},{internalType:"contract IVeDelegation",name:"delegation",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newImplementation",type:"address"}],name:"DelegationImplementationUpdated",type:"event"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"adjustedBalanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"adjusted_balance_of",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDelegationImplementation",outputs:[{internalType:"contract IVeDelegation",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVotingEscrow",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"killDelegation",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IVeDelegation",name:"delegation",type:"address"}],name:"setDelegation",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}];class X{constructor(e,t=P.jsonProvider,n=S.value===I.MAINNET?Z:J,s=f,r=_){B(this,"instance");this.address=e,this.provider=t,this.abi=n,this.config=s,this.walletService=r;const o=q();this.instance=new o(this.address,this.abi,this.provider)}async getAdjustedBalance(e){const t=await this.instance.adjustedBalanceOf(b(e));return g(t,18)}async getVeBalTotalSupplyL2(){const e=await this.instance.totalSupply();return g(e,18)}async getAdjustedBalances(e){const t=this.getMulticaller();for(const s of e)t.call(s,this.address,"adjustedBalanceOf",[b(s)]);const n=await t.execute();return M.mapValues(n,s=>g(s||"0",18))}getMulticaller(){const e=Q();return new e(this.config.network.key,this.provider,this.abi)}}class H{async getWorkingSupplyForGauges(e){const t=N.getMulticaller();for(const r of e)t.call(b(r),b(r),"working_supply");const n=await t.execute();return M.mapValues(n,r=>g(r,18))}async getBoostDeps(e){const t=new X(f.network.addresses.veDelegationProxy);let n="0";S.value===I.MAINNET?n=(await new G().veBAL.getLockInfo(e)).totalSupply:n=await t.getVeBalTotalSupplyL2();const s=await t.getAdjustedBalance(e);return{veBALTotalSupply:n,userVeBALBalance:s}}calcUserBoost({userGaugeBalance:e,gaugeTotalSupply:t,userVeBALBalance:n,veBALTotalSupply:s}){const r=y(e),o=y(t),i=y(n),u=y(s),l=y(1).plus(y(1.5).times(i).div(u).times(o).div(r));return(y(2.5).lt(l)?2.5:l).toString()}async getUserBoosts({userAddress:e,gaugeShares:t}){const{veBALTotalSupply:n,userVeBALBalance:s}=await this.getBoostDeps(e),r=t.map(o=>{const i=this.calcUserBoost({userGaugeBalance:o.balance,gaugeTotalSupply:o.gauge.totalSupply,userVeBALBalance:s,veBALTotalSupply:n});return[o.gauge.poolId,i]});return Object.fromEntries(r)}}const ee=new H;function te(a,e={}){const{account:t,isWalletReady:n}=v(),s=p(w.User.Boosts(t,a)),r=m(()=>!!a.value&&n.value),o=async()=>{try{return!a.value||a.value.length===0?{}:R.value?await ee.getUserBoosts({userAddress:t.value,gaugeShares:a.value}):{}}catch(u){throw k("Failed to fetch user boost values",u),u}},i=p({enabled:r,refetchOnWindowFocus:!1,...e});return h(s,o,i)}async function ae({url:a,query:e,options:t={}}){const n=await fetch(a,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...t==null?void 0:t.headers},body:JSON.stringify({query:z.jsonToGraphQLQuery({query:e})})}),{data:s}=await n.json();return s}function ne(a,e={}){const{account:t,isWalletReady:n}=v(),s=p(w.User.Gauges(t,a)),r=m(()=>!!f.network.subgraphs.gauge&&n.value),o=m(()=>a!=null&&a.value?{where:{user:t.value.toLowerCase(),balance_gt:"0",gauge_:{pool:a.value.toLowerCase()}}}:{where:{user:t.value.toLowerCase(),balance_gt:"0"}}),i=m(()=>({__name:"GaugeShares",gaugeShares:{__args:o.value,balance:!0,gauge:{id:!0,poolAddress:!0,poolId:!0,totalSupply:!0,isPreferentialGauge:!0,isKilled:!0}}})),u=async()=>{try{const{gaugeShares:c}=await ae({url:f.network.subgraphs.gauge,query:i.value});return c}catch(c){throw console.error("Failed to fetch pool gauges user",{cause:c}),c}},l=p({enabled:r,refetchOnWindowFocus:!1,...e});return h(s,u,l)}function se(a={}){const{account:e,isWalletReady:t}=v(),n=p(w.User.Pools(e)),s=m(()=>t.value),r=async()=>{try{return(await $.poolShares.get({where:{userAddress:e.value.toLowerCase()}})).reduce((u,l)=>({...u,[l.poolId.id]:l.balance}),{})}catch(i){throw console.error("Failed users pool shares",{cause:i}),i}},o=p({enabled:s,refetchOnWindowFocus:!1,...a});return h(n,r,o)}const re=()=>{const a=se(),e=ne(),{data:t}=e,n=Y(t),s=te(t),r=K();return{userPoolSharesQuery:a,userGaugeSharesQuery:e,stakedSharesQuery:n,userBoostsQuery:s,lockQuery:r}},V=Symbol(x.Providers.UserData);function me(){W(V,re())}function ge(){return F(V)}export{me as p,ae as s,ge as u};
//# sourceMappingURL=user-data.provider-8fbcf693.js.map
