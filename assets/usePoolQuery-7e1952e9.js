var g=Object.defineProperty;var d=(r,o,e)=>o in r?g(r,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[o]=e;var a=(r,o,e)=>(d(r,typeof o!="symbol"?o+"":o,e),e);import{av as w,a_ as P,aZ as b}from"./BalBtn-cca6788c.js";import{g as k,b as m,i as A,P as n,p as R}from"./api-e32fdf3d.js";import{n as q,t as v}from"./usePoolHelpers-eb955974.js";import{Q as D,aa as S}from"./connector-16147cef.js";import{b as I}from"./balancer-api.service-037872f8.js";import{u as E,aj as Q,r as T}from"./runtime-core.esm-bundler-558f8953.js";class z{constructor(o){a(this,"repository");a(this,"queryArgs");this.tokens=o;const e=k();this.repository=new e(this.buildRepositories(),{timeout:30*1e3}),this.queryArgs={}}async fetch(o){this.queryArgs=o;const[e]=await this.repository.fetch();return e}initializeDecoratedAPIRepository(){return{fetch:async()=>{const o=await I.pool.get(this.queryArgs);if(!o)throw new Error("Cannot find pool via Balancer API");return[o]},get skip(){return 0}}}initializeDecoratedSubgraphRepository(){return{fetch:async()=>{const o=await m.pools.get(this.queryArgs);return await new n(o).decorate(this.tokens.value,!0)},get skip(){return 0}}}buildRepositories(){const o=[];if(A){const s=this.initializeDecoratedAPIRepository();o.push(s)}const e=this.initializeDecoratedSubgraphRepository();return o.push(e),o}}function Y(r,o=T(!0),e={}){const s=R.findPool(r),{injectTokens:c,tokens:i}=w(),p=new z(i),l=E(()=>o.value);function u(){return{chainId:D.network.chainId,where:{id:{eq:r==null?void 0:r.toLowerCase()},totalShares:{gt:-1},poolType:{in:S.IncludedPoolTypes}}}}const y=b.Pools.Current(r),h=async()=>{let t;if(s?t=s:t=await p.fetch(u()),!t)throw new Error("Pool does not exist");return t.onchain||([t]=await new n([t]).decorate(i.value,!1)),c([...q(t),...v(t.tokens),t.address]),t},f=Q({enabled:l,keepPreviousData:!0,refetchOnWindowFocus:!1,...e});return P(y,h,f)}export{Y as u};
//# sourceMappingURL=usePoolQuery-7e1952e9.js.map
