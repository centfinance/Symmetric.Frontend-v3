{"version":3,"file":"TokenPills.vue_vue_type_script_setup_true_lang-7a301204.js","sources":["../../src/components/tables/PoolsTable/TokenPills/BalanceTooltip.vue","../../src/components/tables/PoolsTable/TokenPills/TokenPills.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed } from 'vue';\n\nimport BalAsset from '@/components/_global/BalAsset/BalAsset.vue';\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\nimport { useTokens } from '@/providers/tokens.provider';\nimport { shortenLabel } from '@/lib/utils';\nimport useWeb3 from '@/services/web3/useWeb3';\nimport { PoolToken } from '@balancer-labs/sdk';\n\n/**\n * TYPES\n */\ntype Props = {\n  token: PoolToken;\n  symbol: string;\n};\n\nconst props = defineProps<Props>();\n\n/**\n * COMPOSABLES\n */\nconst { fNum, toFiat } = useNumbers();\nconst { account } = useWeb3();\nconst { balanceFor } = useTokens();\n\n/**\n * COMPUTED\n */\nconst tokenBalance = computed(() => balanceFor(props.token.address));\nconst shortenedAccount = computed(() => shortenLabel(account.value));\n</script>\n\n<template>\n  <div>\n    <div class=\"mb-2 text-secondary\">\n      {{ $t('tokenPills.balanceTooltip.title', [shortenedAccount]) }}\n    </div>\n    <div class=\"flex\">\n      <BalAsset :address=\"token.address\" :size=\"36\" class=\"mr-2\" />\n      <div>\n        <div class=\"text-sm font-semibold\">\n          {{ fNum(tokenBalance, FNumFormats.token) }}\n          {{ symbol }}\n        </div>\n        <div class=\"text-secondary\">\n          {{ fNum(toFiat(tokenBalance, token.address), FNumFormats.fiat) }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\n\nimport useNumbers from '@/composables/useNumbers';\nimport { useTokens } from '@/providers/tokens.provider';\nimport { includesAddress } from '@/lib/utils';\nimport { PoolToken } from '@/services/pool/types';\n\nimport HiddenTokensPills from './HiddenTokensPills.vue';\nimport StableTokenPill from './StableTokenPill.vue';\nimport WeightedTokenPill from './WeightedTokenPill.vue';\n\ntype Props = {\n  tokens: PoolToken[];\n  isStablePool?: boolean;\n  selectedTokens?: string[];\n  pickedTokens?: string[];\n  isOnMigrationCard?: boolean;\n  isHovered?: boolean;\n};\n\nconst props = withDefaults(defineProps<Props>(), {\n  isStablePool: false,\n  selectedTokens: () => [],\n  pickedTokens: () => [],\n  isOnMigrationCard: false,\n  isHovered: false,\n});\n\nconst { fNum } = useNumbers();\nconst { getToken, hasBalance } = useTokens();\n\n/**\n * COMPUTED\n */\nconst visibleTokens = computed(() => props.tokens.slice(0, MAX_PILLS));\n\nconst hiddenTokens = computed(() => props.tokens.slice(MAX_PILLS));\n\nconst hasBalanceInHiddenTokens = computed(() =>\n  hiddenTokens.value.some(token => hasBalance(token.address))\n);\n\nconst isSelectedInHiddenTokens = computed(() =>\n  hiddenTokens.value.some(token =>\n    includesAddress(props.selectedTokens, token.address)\n  )\n);\n\nconst isSelectedInPickedTokens = computed(() =>\n  hiddenTokens.value.some(token =>\n    includesAddress(props.pickedTokens, token.address)\n  )\n);\n\n/**\n * METHODS\n */\nfunction symbolFor(token: PoolToken): string {\n  return getToken(token.address)?.symbol || token.symbol || '---';\n}\n\nfunction weightFor(token: PoolToken): string {\n  return fNum(token.weight || '0', {\n    style: 'percent',\n    maximumFractionDigits: 0,\n  });\n}\n\nconst MAX_PILLS = 8;\n</script>\n\n<template>\n  <div class=\"flex flex-wrap\">\n    <template v-if=\"isStablePool\">\n      <StableTokenPill\n        v-for=\"token in visibleTokens\"\n        :key=\"token.address\"\n        :hasBalance=\"hasBalance(token.address)\"\n        :symbol=\"symbolFor(token)\"\n        :token=\"token\"\n        :isSelected=\"includesAddress(selectedTokens, token.address)\"\n        :isPicked=\"includesAddress(pickedTokens, token.address)\"\n      />\n    </template>\n    <template v-else>\n      <WeightedTokenPill\n        v-for=\"token in visibleTokens\"\n        :key=\"token.address\"\n        :hasBalance=\"hasBalance(token.address)\"\n        :symbol=\"symbolFor(token)\"\n        :weight=\"weightFor(token)\"\n        :token=\"token\"\n        :isSelected=\"includesAddress(selectedTokens, token.address)\"\n        :isPicked=\"includesAddress(pickedTokens, token.address)\"\n        :isOnMigrationCard=\"isOnMigrationCard\"\n        :isHovered=\"isHovered\"\n      />\n      <HiddenTokensPills\n        v-if=\"hiddenTokens.length > 0\"\n        :tokens=\"hiddenTokens\"\n        :hasBalance=\"hasBalanceInHiddenTokens\"\n        :isSelected=\"isSelectedInHiddenTokens\"\n        :isPicked=\"isSelectedInPickedTokens\"\n      />\n    </template>\n  </div>\n</template>\n"],"names":["fNum","toFiat","useNumbers","account","useWeb3","balanceFor","useTokens","tokenBalance","computed","props","shortenedAccount","shortenLabel","MAX_PILLS","getToken","hasBalance","visibleTokens","hiddenTokens","hasBalanceInHiddenTokens","token","isSelectedInHiddenTokens","includesAddress","isSelectedInPickedTokens","symbolFor","_a","weightFor"],"mappings":"w3CAuBA,CAAA,KAAAA,EAAA,OAAAC,CAAA,EAAAC,EAAA,EACA,CAAA,QAAAC,GAAAC,IACA,CAAA,WAAAC,GAAAC,IAKAC,EAAAC,EAAA,IAAAH,EAAAI,EAAA,MAAA,OAAA,CAAA,EACAC,EAAAF,EAAA,IAAAG,EAAAR,EAAA,KAAA,CAAA,wlECsCAS,EAAA,sPAxCA,CAAA,KAAAZ,GAAAE,IACA,CAAA,SAAAW,EAAA,WAAAC,CAAA,EAAAR,EAAA,EAKAS,EAAAP,EAAA,IAAAC,EAAA,OAAA,MAAA,EAAAG,CAAA,CAAA,EAEAI,EAAAR,EAAA,IAAAC,EAAA,OAAA,MAAAG,CAAA,CAAA,EAEAK,EAAAT,EAAiC,IAAAQ,EAAA,MAAA,KAAAE,GAAAJ,EAAAI,EAAA,OAAA,CAAA,CAC2B,EAG5DC,EAAAX,EAAiC,IAAAQ,EAAA,MAAA,KACZE,GAAAE,EAAAX,EAAA,eAAAS,EAAA,OAAA,CACkC,CACrD,EAGFG,EAAAb,EAAiC,IAAAQ,EAAA,MAAA,KACZE,GAAAE,EAAAX,EAAA,aAAAS,EAAA,OAAA,CACgC,CACnD,EAMF,SAAAI,EAAAJ,EAAA,OACE,QAAAK,EAAAV,EAAAK,EAAA,OAAA,IAAA,YAAAK,EAAA,SAAAL,EAAA,QAAA,KAA0D,CAG5D,SAAAM,EAAAN,EAAA,CACE,OAAAlB,EAAAkB,EAAA,QAAA,IAAA,CAAiC,MAAA,UACxB,sBAAA,CACgB,CAAA,CACxB"}