{"version":3,"file":"options-322e8a89.js","sources":["../../src/components/forms/AppSlippageForm.vue","../../src/composables/useEthereumTxType.ts","../../src/constants/options.ts"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, reactive, watch } from 'vue';\n\nimport useNumbers from '@/composables/useNumbers';\nimport { useUserSettings } from '@/providers/user-settings.provider';\nimport { bnum } from '@/lib/utils';\n\nconst FIXED_OPTIONS = ['0.005', '0.01', '0.02'];\n\n/**\n * COMPOSABLES\n */\nconst { fNum } = useNumbers();\nconst { slippage, setSlippage } = useUserSettings();\n\n/**\n * STATE\n */\nconst state = reactive({\n  fixedSlippage: '',\n  customSlippage: '',\n  isCustomInput: false,\n});\n\nconst options = FIXED_OPTIONS.map(option => {\n  return {\n    label: fNum(option, {\n      style: 'percent',\n      minimumFractionDigits: 1,\n      maximumFractionDigits: 1,\n      fixedFormat: true,\n    }),\n    value: option,\n  };\n});\n\n/**\n * COMPUTED\n */\nconst isFixedSlippage = computed(() => {\n  return FIXED_OPTIONS.includes(slippage.value);\n});\n\nconst customInputClasses = computed(() => ({\n  'border border-blue-500 text-blue-500':\n    !isFixedSlippage.value && state.isCustomInput,\n  'border dark:border-gray-900': isFixedSlippage.value && !state.isCustomInput,\n}));\n\n/**\n * METHODS\n */\nfunction onFixedInput(val: string): void {\n  state.isCustomInput = false;\n  state.customSlippage = '';\n  setSlippage(val);\n}\n\nfunction onCustomInput(val: string): void {\n  if (!val) return;\n  state.isCustomInput = true;\n  val = bnum(val).div(100).toString();\n  setSlippage(val);\n}\n\n/**\n * WATCHERS\n */\nwatch(\n  slippage,\n  newSlippage => {\n    if (isFixedSlippage.value && !state.isCustomInput) {\n      state.fixedSlippage = newSlippage;\n      state.customSlippage = '';\n    } else {\n      state.customSlippage = bnum(newSlippage).times(100).toString();\n      state.fixedSlippage = '';\n    }\n  },\n  { immediate: true }\n);\n\nwatch(() => state.customSlippage, onCustomInput, { immediate: true });\n</script>\n\n<template>\n  <div class=\"flex\">\n    <BalBtnGroup\n      v-model=\"state.fixedSlippage\"\n      :options=\"options\"\n      @update:model-value=\"onFixedInput\"\n    />\n    <div :class=\"['custom-input', customInputClasses]\">\n      <input\n        v-model=\"state.customSlippage\"\n        class=\"w-12 text-right bg-transparent\"\n        placeholder=\"0.1\"\n        type=\"number\"\n        step=\"any\"\n        min=\"0\"\n      />\n      <div class=\"px-2\">%</div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.custom-input {\n  @apply flex items-center px-1 rounded-lg shadow-inner;\n}\n</style>\n","import { ref } from 'vue';\n\nimport LS_KEYS from '@/constants/local-storage.keys';\nimport { lsGet, lsSet } from '@/lib/utils';\n\nexport enum EthereumTxType {\n  LEGACY = 'Legacy',\n  EIP1559 = 'EIP1559',\n}\n\nconst lsEthereumTxType = lsGet(\n  LS_KEYS.App.EthereumTxType,\n  EthereumTxType.EIP1559\n);\n\n// STATE\nexport const ethereumTxType = ref<EthereumTxType>(lsEthereumTxType);\n\n// MUTATIONS\nfunction setEthereumTxType(txType: EthereumTxType): void {\n  ethereumTxType.value = txType;\n  lsSet(LS_KEYS.App.EthereumTxType, txType);\n}\n\n// INIT\nsetEthereumTxType(ethereumTxType.value);\n\nexport default function useEthereumTxType() {\n  return {\n    ethereumTxType,\n    setEthereumTxType,\n  };\n}\n","import { EthereumTxType } from '@/composables/useEthereumTxType';\n\nexport const ethereumTxTypeOptions = Object.values(EthereumTxType)\n  .filter(v => typeof v === 'string')\n  .map(option => ({\n    label: option,\n    value: option,\n  }));\n"],"names":["FIXED_OPTIONS","fNum","useNumbers","slippage","setSlippage","useUserSettings","state","reactive","options","option","isFixedSlippage","computed","customInputClasses","onFixedInput","val","onCustomInput","bnum","watch","newSlippage","EthereumTxType","lsEthereumTxType","lsGet","LS_KEYS","ethereumTxType","ref","setEthereumTxType","txType","lsSet","useEthereumTxType","ethereumTxTypeOptions","v"],"mappings":"ijBAOA,MAAAA,EAAA,CAAA,QAAA,OAAA,MAAA,EAKA,CAAA,KAAAC,GAAAC,IACA,CAAA,SAAAC,EAAA,YAAAC,CAAA,EAAAC,EAAA,EAKAC,EAAAC,EAAA,CAAuB,cAAA,GACN,eAAA,GACC,cAAA,EACD,CAAA,EAGjBC,EAAAR,EAAA,IAAAS,IACE,CAAO,MAAAR,EAAAQ,EAAA,CACe,MAAA,UACX,sBAAA,EACgB,sBAAA,EACA,YAAA,EACV,CAAA,EACd,MAAAA,CACM,EACT,EAMFC,EAAAC,EAAA,IACEX,EAAA,SAAAG,EAAA,KAAA,CAA4C,EAG9CS,EAAAD,EAAA,KAAA,CAA2C,uCAAA,CAAAD,EAAA,OAAAJ,EAAA,cAEP,8BAAAI,EAAA,OAAA,CAAAJ,EAAA,aAC6B,EAAA,EAMjE,SAAAO,EAAAC,EAAA,CACER,EAAA,cAAA,GACAA,EAAA,eAAA,GACAF,EAAAU,CAAA,CAAe,CAGjB,SAAAC,EAAAD,EAAA,CACEA,IACAR,EAAA,cAAA,GACAQ,EAAAE,EAAAF,CAAA,EAAA,IAAA,GAAA,EAAA,WACAV,EAAAU,CAAA,EAAe,CAMjB,OAAAG,EAAAd,EACEe,GAAA,CAEER,EAAA,OAAA,CAAAJ,EAAA,eACEA,EAAA,cAAAY,EACAZ,EAAA,eAAA,KAEAA,EAAA,eAAAU,EAAAE,CAAA,EAAA,MAAA,GAAA,EAAA,WACAZ,EAAA,cAAA,GACF,EACF,CAAA,UAAA,EAAA,CACkB,EAGpBW,EAAA,IAAAX,EAAA,eAAAS,EAAA,CAAA,UAAA,EAAA,CAAA,geC7EY,IAAAI,GAAAA,IACVA,EAAA,OAAS,SACTA,EAAA,QAAU,UAFAA,IAAAA,GAAA,CAAA,CAAA,EAKZ,MAAMC,EAAmBC,EACvBC,EAAQ,IAAI,eACZ,SACF,EAGaC,EAAiBC,EAAoBJ,CAAgB,EAGlE,SAASK,EAAkBC,EAA8B,CACvDH,EAAe,MAAQG,EACjBC,EAAAL,EAAQ,IAAI,eAAgBI,CAAM,CAC1C,CAGAD,EAAkBF,EAAe,KAAK,EAEtC,SAAwBK,GAAoB,CACnC,MAAA,CACL,eAAAL,EACA,kBAAAE,CAAA,CAEJ,CC9BO,MAAMI,GAAwB,OAAO,OAAOV,CAAc,EAC9D,OAAYW,GAAA,OAAOA,GAAM,QAAQ,EACjC,IAAerB,IAAA,CACd,MAAOA,EACP,MAAOA,CACT,EAAE"}