var C=Object.defineProperty;var _=(a,e,t)=>e in a?C(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var s=(a,e,t)=>(_(a,typeof e!="symbol"?e+"":e,t),t);import{A as L,l as I,F as x,a as R,p as F,c as q,h as N,b as O,d as $,e as V}from"./usePoolHelpers-eb955974.js";import{bo as U,aO as W,aP as g,bv as z,bw as Q,bx as H,aR as E,b1 as v,aT as c,aQ as S,bl as j,b7 as G,a$ as K}from"./BalBtn-cca6788c.js";import{Q as y,T as r,Z as m,aa as Y,$ as J,o as k,n as Z}from"./connector-16147cef.js";import{s as X}from"./subgraph-fallback.service-7e7c32be.js";import{g as M}from"./balancer-sdk-d0995fe4.js";import{d as ee}from"./index-155f0d25.js";import{d as h}from"./index-18b6daea.js";import{S as te}from"./StablePhantomPool-f25cd4a4.js";import{r as ne}from"./runtime-core.esm-bundler-558f8953.js";let P=L;function st(){return P||U("PoolsFallbackRepository"),P}class ae{constructor(e=y){s(this,"url");this.configService=e,this.url=e.network.subgraphs.blocks}async get(e){try{const t=this.toPayload(e),{data:{data:n}}=await W.post(this.url,t);return n}catch(t){console.error(t)}}toPayload(e){return JSON.stringify({query:I.jsonToGraphQLQuery({query:e})})}}const ie=new ae,se={first:1,orderBy:"timestamp",orderDirection:"asc"},re={number:!0},oe=(a={},e={})=>({blocks:{__args:r.merge({},se,a),...r.merge({},re,e)}});class pe{constructor(e,t=oe){s(this,"service");s(this,"query");this.service=e,this.query=t}async get(e={},t={}){const n=this.query(e,t);return await this.service.client.get(n)}}class ue{constructor(e=ie,t=g){s(this,"blockNumber");this.client=e,this.rpcProviderService=t,this.blockNumber=new pe(this)}}const le=new ue;class ye{constructor(e=le,t=g,n=y){this.subgraphService=e,this.rpc=t,this.config=n}async fetchBlockByTime(e,t=!0){return this.config.network.subgraphs.blocks?this.fetchBlockByTimeWithGraph(e,t):this.fetchBlockByApprox(e)}async fetchBlockByApprox(e){const t=Q(Number(e)),n=await this.rpc.getBlockNumber(),i=Math.floor(t/this.config.network.blockTime);return n-i}async fetchBlockByTimeWithGraph(e,t=!0){try{let n={};if(t){const p=m(e).plus(z);n={where:{timestamp_gt:e,timestamp_lt:p.toString()}}}else n={where:{timestamp_gt:e}};const i=await this.subgraphService.blockNumber.get(n);return parseInt(i.blocks[0].number)}catch(n){if(t)return this.fetchBlockByTime(e,!1);throw n}}}const A=new ye;async function de(a="24h"){const e=`${Math.floor(Date.now()/1e3)-H}`;switch(a){case"24h":return A.fetchBlockByTime(e);default:return A.fetchBlockByTime(e)}}class ce{async get(e){try{const t=this.toPayload(e),n=await X.get(t);return n?n.data.data:void 0}catch(t){console.error(t)}}toPayload(e){return{query:I.jsonToGraphQLQuery({query:e})}}}const me=new ce,Te={first:100,orderBy:"timestamp",orderDirection:"desc"},be={amounts:!0,timestamp:!0,tx:!0,type:!0},he=(a={},e={})=>({joinExits:{__args:r.merge({},Te,a),...r.merge({},be,e)}});class fe{constructor(e,t=he){s(this,"service");s(this,"query");this.service=e,this.query=t}async get(e={},t={}){const n=this.query(e,t),{joinExits:i}=await this.service.client.get(n);return this.serializeActivity(i)}serializeActivity(e){return e.map(t=>({...t,timestamp:t.timestamp*1e3}))}}const we={first:1e3,orderBy:"totalLiquidity",orderDirection:"desc",where:{id:{not_in:Y.BlockList}}},f={address:!0,balance:!0,weight:!0,priceRate:!0,symbol:!0,decimals:!0},w={id:!0,totalShares:!0,address:!0,poolType:!0,mainIndex:!0},ge={...f,token:{latestUSDPrice:!0,pool:{...w,tokens:{...f,token:{latestUSDPrice:!0,pool:{...w,tokens:{...f,token:{latestUSDPrice:!0,pool:{...w}}}}}}}}},ve={address:!0,token:{address:!0}},Se={id:!0,address:!0,poolType:!0,swapFee:!0,tokensList:!0,totalLiquidity:!0,totalSwapVolume:!0,totalSwapFee:!0,totalShares:!0,owner:!0,factory:!0,amp:!0,createTime:!0,swapEnabled:!0,symbol:!0,name:!0,protocolYieldFeeCache:!0,priceRateProviders:ve,tokens:ge,poolTypeVersion:!0,isInRecoveryMode:!0,isPaused:!0},ke=(a={},e={})=>({args:r.merge({},we,a),attrs:r.merge({},Se,e)});class Me{constructor(e,t=ke){s(this,"service");s(this,"queryBuilder");s(this,"lastQuery");s(this,"repository");this.service=e,this.queryBuilder=t}async get(e={},t={}){const n=this.queryBuilder(e,t);return(!this.repository||!r.isEqual(n,this.lastQuery))&&(this.lastQuery=r.cloneDeep(n),console.log(n),this.repository=new x({url:y.network.subgraph,chainId:y.network.chainId,query:n})),await this.repository.fetch({first:n.args.first,skip:n.args.skip})}get skip(){return this.repository?this.repository.skip:0}}const Pe={first:1e3,where:{balance_gt:1e-6}},Ae={poolId:{id:!0},balance:!0},Ie=(a={},e={},t=void 0)=>({__name:t,poolShares:{__args:r.merge({},Pe,a),...r.merge({},Ae,e)}});class Re{constructor(e,t=Ie){s(this,"service");s(this,"query");this.service=e,this.query=t}async get(e={},t={}){const n="PoolShares",i=this.query(e,t,n);return(await this.service.client.get(i)).poolShares}}const qe={first:1e3},B={pool:{id:!0},liquidity:!0,timestamp:!0,amounts:!0,totalShares:!0,swapVolume:!0,swapFees:!0};J.value||(B.liquidity=!0);const Ee=(a={},e={})=>({poolSnapshots:{__args:r.merge({},qe,a),...r.merge({},B,e)}});class Be{constructor(e,t=Ee){s(this,"service");s(this,"query");this.service=e,this.query=t}async get(e={},t={}){const n=this.query(e,t),i=await this.service.client.get(n);return this.serialize(i.poolSnapshots)}serialize(e){return e.reverse().reduce((t,n)=>{const i=E(n.timestamp);return t[i]={...n,timestamp:i},t},{})}}const De={first:100,orderBy:"timestamp",orderDirection:"desc"},Ce={tokenIn:!0,tokenOut:!0,tokenAmountIn:!0,tokenAmountOut:!0,tx:!0,timestamp:!0,userAddress:{id:!0}},_e=(a={},e={})=>({swaps:{__args:r.merge({},De,a),...r.merge({},Ce,e)}});class Le{constructor(e,t=_e){s(this,"service");s(this,"query");this.service=e,this.query=t}async get(e={},t={}){const n=this.query(e,t),{swaps:i}=await this.service.client.get(n);return await this.serialize(i)}async swaprDecoration(e){const t=await Promise.all(e.map(async n=>{const i=await v.getEnsName(n.userAddress.id);let p=null;return i&&(p=await v.getEnsAvatar(i)),{ensName:i,ensAvatar:p}}));return e.map((n,i)=>({...n,ensName:t[i].ensName,ensAvatar:t[i].ensAvatar}))}async serialize(e){return(await this.swaprDecoration(e)).map(n=>({...n,tokenIn:k(n.tokenIn),tokenOut:k(n.tokenOut),timestamp:E(n.timestamp)}))}}const xe={first:1e3,where:{totalSwapVolume_gt:0}},Fe={totalSwapFee:!0,totalSwapVolume:!0,pair:{token0:{address:!0,symbol:!0},token1:{address:!0,symbol:!0}}},Ne=(a={},e={})=>({tradePairSnapshots:{__args:r.merge({},xe,a),...r.merge({},Fe,e)}});class Oe{constructor(e,t=Ne){s(this,"service");s(this,"query");this.service=e,this.query=t}async get(e={},t={}){const n=this.query(e,t);return(await this.service.client.get(n)).tradePairSnapshots}}class $e{constructor(e=me,t=g){s(this,"pools");s(this,"poolShares");s(this,"poolActivities");s(this,"poolSwaps");s(this,"poolSnapshots");s(this,"tradePairSnapshots");this.client=e,this.rpcProviderService=t,this.pools=new Me(this),this.poolShares=new Re(this),this.poolActivities=new fe(this),this.poolSwaps=new Le(this),this.poolSnapshots=new Be(this),this.tradePairSnapshots=new Oe(this)}}const Ve=new $e;class Ue{constructor(e,t,n){this.pool=e,this.rawData=t,this.tokenMeta=n}format(){var t;const e={};return e.tokens=this.formatPoolTokens(),e.amp="0",(t=this.rawData)!=null&&t.amp&&(e.amp=this.rawData.amp.value.div(this.rawData.amp.precision).toString()),e.swapEnabled=!0,this.rawData.swapEnabled!==void 0&&(e.swapEnabled=this.rawData.swapEnabled),this.rawData.tokenRates&&(e.tokenRates=this.rawData.tokenRates.map(n=>c(n.toString(),18))),e.totalSupply=c(this.rawData.totalSupply,this.rawData.decimals),e.decimals=this.rawData.decimals,e.swapFee=c(this.rawData.swapFee,18),e}formatPoolTokens(){const e={},t=this.normalizeWeights();return this.rawData.poolTokens.tokens.forEach((n,i)=>{var b,u,o,d;const p=this.rawData.poolTokens.balances[i],T=(b=this.tokenMeta[n])==null?void 0:b.decimals;e[n.toLowerCase()]={decimals:T,balance:c(p,T),weight:t[i],symbol:(u=this.tokenMeta[n])==null?void 0:u.symbol,name:(o=this.tokenMeta[n])==null?void 0:o.name,logoURI:(d=this.tokenMeta[n])==null?void 0:d.logoURI}}),delete e[this.pool.address.toLowerCase()],e}normalizeWeights(){if(R(this.pool.poolType))return F(this.rawData.weights||[]).map(e=>Number(c(e,18)));if(q(this.pool.poolType)){const e=this.pool.tokensList.map(()=>1/this.pool.tokensList.length);return this.rawData.poolTokens.tokens.map(()=>e[0])}else return[]}}class We{constructor(e){this.pool=e,this.format()}format(){return this.pool.isNew=this.isNew,this.pool.chainId=Z.value,this.formatPoolTokens(),this.pool}get bptPrice(){return m(this.pool.totalLiquidity).div(this.pool.totalShares).toString()}async setTotalLiquidity(){let e=this.pool.totalLiquidity;try{console.log(this.pool);const t=await M().pools.liquidity(this.pool);m(e).gt(0)&&(e=t)}catch(t){S({error:t}),console.error(`Failed to calc liquidity for: ${this.pool.id}`,t)}return this.pool.totalLiquidity=e}async setAPR(){let e=this.pool.apr;try{const t=await M().pools.apr(this.pool);t&&(e=t)}catch(t){S({error:t}),console.error(`Failed to calc APR for: ${this.pool.id}`,t)}return this.pool.apr=e}formatPoolTokens(){return N(this.pool.poolType)?this.pool.tokens:this.pool.tokens=this.pool.tokens.sort((e,t)=>parseFloat(t.weight||"0")-parseFloat(e.weight||"0"))}setFeesSnapshot(e){let t="0";e&&(t=e.totalSwapFee||"0");const n=m(this.pool.totalSwapFee||0).minus(t).toString();return this.pool.feesSnapshot=n}setVolumeSnapshot(e){let t="0";e&&(t=e.totalSwapVolume||"0");const n=m(this.pool.totalSwapVolume||0).minus(t).toString();return this.pool.volumeSnapshot=n}setOnchainData(e,t){try{const n=new Ue(this.pool,e,t);return this.pool.isInRecoveryMode=e.isInRecoveryMode,this.pool.isPaused=e.isPaused,this.pool.onchain=n.format()}catch(n){console.warn(n)}}get isNew(){return this.pool.createTime?ee(Date.now(),this.pool.createTime*j)<1:!1}}const ze=[{inputs:[],name:"asset",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"}],Qe=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],He=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!1,internalType:"address",name:"aToken",type:"address"},{indexed:!1,internalType:"string",name:"staticATokenName",type:"string"},{indexed:!1,internalType:"string",name:"staticATokenSymbol",type:"string"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"ASSET",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"ATOKEN",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"EIP712_REVISION",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"INCENTIVES_CONTROLLER",outputs:[{internalType:"contract IAaveIncentivesController",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"LENDING_POOL",outputs:[{internalType:"contract ILendingPool",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"METADEPOSIT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"METAWITHDRAWAL_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"PERMIT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"REWARD_TOKEN",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"STATIC_ATOKEN_LM_REVISION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"UNDERLYING_ASSET_ADDRESS",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"_nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"bool",name:"forceUpdate",type:"bool"}],name:"claimRewards",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"onBehalfOf",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"bool",name:"forceUpdate",type:"bool"}],name:"claimRewardsOnBehalf",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"forceUpdate",type:"bool"}],name:"claimRewardsToSelf",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"collectAndUpdateRewards",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint16",name:"referralCode",type:"uint16"},{internalType:"bool",name:"fromUnderlying",type:"bool"}],name:"deposit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"dynamicBalanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"dynamicToStaticAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAccRewardsPerToken",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getClaimableRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getIncentivesController",outputs:[{internalType:"contract IAaveIncentivesController",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastRewardBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLifetimeRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLifetimeRewardsClaimed",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalClaimableRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getUnclaimedRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract ILendingPool",name:"pool",type:"address"},{internalType:"address",name:"aToken",type:"address"},{internalType:"string",name:"staticATokenName",type:"string"},{internalType:"string",name:"staticATokenSymbol",type:"string"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"depositor",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint16",name:"referralCode",type:"uint16"},{internalType:"bool",name:"fromUnderlying",type:"bool"},{internalType:"uint256",name:"deadline",type:"uint256"},{components:[{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct IStaticATokenLM.SignatureParams",name:"sigParams",type:"tuple"}],name:"metaDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"staticAmount",type:"uint256"},{internalType:"uint256",name:"dynamicAmount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"},{internalType:"uint256",name:"deadline",type:"uint256"},{components:[{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct IStaticATokenLM.SignatureParams",name:"sigParams",type:"tuple"}],name:"metaWithdraw",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"rate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"staticToDynamicAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"}],name:"withdraw",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"}],name:"withdrawDynamicAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"}],l=Object.values(Object.fromEntries([...h.WeightedPool__factory.abi,...h.StablePool__factory.abi,...h.InvestmentPool__factory.abi,...te,...Qe,...He,...G,...ze].map(a=>[a.name,a])));class je{constructor(e,t=K(),n=y.network.addresses.vault){this.pools=e,this.MulticallerClass=t,this.vaultAddress=n}async fetch(){const e={},t=new this.MulticallerClass;return this.pools.forEach(n=>{t.call({key:`${n.id}.totalSupply`,address:n.address,function:"totalSupply",abi:l}).call({key:`${n.id}.decimals`,address:n.address,function:"decimals",abi:l}).call({key:`${n.id}.swapFee`,address:n.address,function:"getSwapFeePercentage",abi:l}).call({key:`${n.id}.isInRecoveryMode`,address:n.address,function:"inRecoveryMode",abi:["function inRecoveryMode() view returns (bool)"]}).call({key:`${n.id}.isPaused`,address:n.address,function:"getPausedState",abi:["function getPausedState() view returns (bool)"]}).call({key:`${n.id}.poolTokens`,address:this.vaultAddress,function:"getPoolTokens",abi:h.Vault__factory.abi,params:[n.id]}),R(n.poolType)?(t.call({key:`${n.id}.weights`,address:n.address,function:"getNormalizedWeights",abi:l}),O(n.poolType)&&t.call({key:`${n.id}.swapEnabled`,address:n.address,function:"getSwapEnabled",abi:l})):q(n.poolType)&&(t.call({key:`${n.id}.amp`,address:n.address,function:"getAmplificationParameter",abi:l}),$(n.poolType)&&(t.call({key:`${n.id}.totalSupply`,address:n.address,function:"getVirtualSupply",abi:l}),V(n.poolType)&&t.call({key:`${n.id}.totalSupply`,address:n.address,function:"getActualSupply",abi:l})))}),await t.execute(e)}}class rt{constructor(e,t=We,n=Ve){this.pools=e,this.poolServiceClass=t,this.poolSubgraph=n}async decorate(e,t=!0){const n=this.pools.map(u=>new this.poolServiceClass(u).pool),i=new je(n),[p,T]=await Promise.all([t?this.getSnapshots():[],i.fetch()]),b=n.map(async u=>{const o=new this.poolServiceClass(u);if(o.setOnchainData(T[u.id],e),t){const d=p.find(D=>D.id===u.id);o.setFeesSnapshot(d),o.setVolumeSnapshot(d),await o.setTotalLiquidity(),await o.setAPR()}return o.pool});return await Promise.all(b)}async reCalculateTotalLiquidities(){return Promise.all(this.pools.map(async e=>{const t=new this.poolServiceClass(e);return await t.setTotalLiquidity(),t.pool}))}async getSnapshots(){const t={number:await de()},n={id:{in:this.pools.map(i=>i.id)}};try{return await this.poolSubgraph.pools.get({where:n,block:t})}catch(i){return console.error("Failed to fetch pool snapshots",i),[]}}}class Ge{constructor(){s(this,"pools",ne(null))}setPools(e){this.pools.value=e}addPools(e){this.pools.value=[...this.pools.value??[],...e]}findPool(e){var t;return(t=this.pools.value)==null?void 0:t.find(n=>n.id===e)}}const ot=new Ge,pt=!!y.network.balancerApi;export{ze as I,Qe as L,rt as P,He as S,Ve as b,st as g,pt as i,ot as p};
//# sourceMappingURL=api-e32fdf3d.js.map
