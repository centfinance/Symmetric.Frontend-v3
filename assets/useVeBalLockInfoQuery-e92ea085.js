var S=Object.defineProperty;var _=(l,e,t)=>e in l?S(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t;var c=(l,e,t)=>(_(l,typeof e!="symbol"?e+"":e,t),t);import{d as f}from"./index-18b6daea.js";import{b3 as x,aT as y,b2 as P,b4 as A,aR as C,b5 as T,b6 as h,aP as B,b7 as E,aq as R,a_ as F}from"./BalBtn-cca6788c.js";import{L,S as V,I as O}from"./api-e32fdf3d.js";import{S as z}from"./StablePhantomPool-f25cd4a4.js";import{b as W}from"./balancer-sdk-d0995fe4.js";import{o as g,U as N,T as $,Q as j,u as q}from"./connector-16147cef.js";import{a as w,b as U,c as I,d as K,e as H,f as M,p as D}from"./usePoolHelpers-eb955974.js";import{i as Q}from"./useVeBAL-5fa15e49.js";import{u as J,aj as k}from"./runtime-core.esm-bundler-558f8953.js";const G=[{inputs:[{internalType:"contract IAuthorizer",name:"authorizer",type:"address"},{internalType:"contract IWETH",name:"weth",type:"address"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IAuthorizer",name:"newAuthorizer",type:"address"}],name:"AuthorizerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"ExternalBalanceTransfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IFlashLoanRecipient",name:"recipient",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"feeAmount",type:"uint256"}],name:"FlashLoan",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"int256",name:"delta",type:"int256"}],name:"InternalBalanceChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"liquidityProvider",type:"address"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{indexed:!1,internalType:"int256[]",name:"deltas",type:"int256[]"},{indexed:!1,internalType:"uint256[]",name:"protocolFeeAmounts",type:"uint256[]"}],name:"PoolBalanceChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"assetManager",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"int256",name:"cashDelta",type:"int256"},{indexed:!1,internalType:"int256",name:"managedDelta",type:"int256"}],name:"PoolBalanceManaged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"poolAddress",type:"address"},{indexed:!1,internalType:"enum IVault.PoolSpecialization",name:"specialization",type:"uint8"}],name:"PoolRegistered",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"relayer",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"RelayerApprovalChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"contract IERC20",name:"tokenIn",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"tokenOut",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOut",type:"uint256"}],name:"Swap",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"TokensDeregistered",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{indexed:!1,internalType:"address[]",name:"assetManagers",type:"address[]"}],name:"TokensRegistered",type:"event"},{inputs:[],name:"WETH",outputs:[{internalType:"contract IWETH",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"batchSwap",outputs:[{internalType:"int256[]",name:"assetDeltas",type:"int256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"deregisterTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"}],name:"exitPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IFlashLoanRecipient",name:"recipient",type:"address"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"flashLoan",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"getInternalBalance",outputs:[{internalType:"uint256[]",name:"balances",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"}],name:"getPool",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"enum IVault.PoolSpecialization",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20",name:"token",type:"address"}],name:"getPoolTokenInfo",outputs:[{internalType:"uint256",name:"cash",type:"uint256"},{internalType:"uint256",name:"managed",type:"uint256"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"assetManager",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"}],name:"getPoolTokens",outputs:[{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract ProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"relayer",type:"address"}],name:"hasApprovedRelayer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.PoolBalanceOpKind",name:"kind",type:"uint8"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct IVault.PoolBalanceOp[]",name:"ops",type:"tuple[]"}],name:"managePoolBalance",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.UserBalanceOpKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"}],internalType:"struct IVault.UserBalanceOp[]",name:"ops",type:"tuple[]"}],name:"manageUserBalance",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"}],name:"queryBatchSwap",outputs:[{internalType:"int256[]",name:"",type:"int256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"enum IVault.PoolSpecialization",name:"specialization",type:"uint8"}],name:"registerPool",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"address[]",name:"assetManagers",type:"address[]"}],name:"registerTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IAuthorizer",name:"newAuthorizer",type:"address"}],name:"setAuthorizer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"relayer",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setRelayerApproval",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swap",outputs:[{internalType:"uint256",name:"amountCalculated",type:"uint256"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}],X=[{inputs:[{internalType:"contract IVault",name:"_vault",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"newFlashLoanFeePercentage",type:"uint256"}],name:"FlashLoanFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"newSwapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"getCollectedFeeAmounts",outputs:[{internalType:"uint256[]",name:"feeAmounts",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getFlashLoanFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"newFlashLoanFeePercentage",type:"uint256"}],name:"setFlashLoanFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newSwapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"vault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"address",name:"recipient",type:"address"}],name:"withdrawCollectedFees",outputs:[],stateMutability:"nonpayable",type:"function"}];class Y{constructor(e){c(this,"address");c(this,"instance");this.vault=e}async getAddress(){return await this.vault.instance.getProtocolFeesCollector()}async getInstance(){return this.address=await this.getAddress(),new x(this.address,X,this.vault.service.provider)}async getSwapFeePercentage(){try{this.instance=await this.getInstance();const e=await this.instance.getSwapFeePercentage();return Number(y(e,18))}catch(e){return console.error("Failed to fetch protocol fee",e),0}}}class Z{constructor(e,t=G){c(this,"service");c(this,"instance");this.service=e,this.instance=new x(this.service.config.addresses.vault,t,this.service.provider)}get protocolFeesCollector(){return new Y(this)}async getPoolData(e,t,a,o){const n=g(t.slice(0,42));let s={};const m=P(),u=new m(this.service.config.key,this.service.provider,f.Vault__factory.abi),i=new m(this.service.config.key,this.service.provider,this.service.allPoolABIs);if(i.call("totalSupply",n,"totalSupply"),i.call("decimals",n,"decimals"),i.call("swapFee",n,"getSwapFeePercentage"),w(a)?(i.call("weights",n,"getNormalizedWeights",[]),U(a)&&i.call("swapEnabled",n,"getSwapEnabled")):I(a)&&(i.call("amp",n,"getAmplificationParameter"),K(a)&&(i.call("totalSupply",n,"getVirtualSupply"),H(a)&&i.call("totalSupply",n,"getActualSupply")),M(e)&&Object.keys(o).forEach((p,r)=>{i.call(`linearPools.${p}.id`,p,"getPoolId"),i.call(`linearPools.${p}.priceRate`,p,"getRate"),i.call(`tokenRates[${r}]`,n,"getTokenRate",[p]),i.call(`linearPools.${p}.mainToken.address`,p,"getMainToken"),i.call(`linearPools.${p}.mainToken.index`,p,"getMainIndex"),i.call(`linearPools.${p}.wrappedToken.address`,p,"getWrappedToken"),i.call(`linearPools.${p}.wrappedToken.index`,p,"getWrappedIndex"),i.call(`linearPools.${p}.wrappedToken.rate`,p,"getWrappedTokenRate")})),s=await i.execute(s),M(e)&&s.linearPools){const p={};Object.keys(s.linearPools).forEach(r=>{if(!s.linearPools)return;const d=s.linearPools[r];u.call(`linearPools.${r}.tokenData`,this.address,"getPoolTokens",[d.id]),p[r]=d.wrappedToken.address}),Object.entries(p).forEach(([r,d])=>{i.call(`linearPools.${r}.unwrappedTokenAddress`,d,"ATOKEN"),i.call(`linearPools.${r}.unwrappedERC4626Address`,d,"asset"),i.call(`linearPools.${r}.totalSupply`,r,"getVirtualSupply")}),s=await i.execute(s)}return u.call("poolTokens",this.address,"getPoolTokens",[t]),s=await u.execute(s),this.formatPoolData(s,a,o,n)}formatPoolData(e,t,a,o){const n={},s=Object.keys(a).filter(u=>!N(u,o));a=$.pick(a,s);const m=this.normalizeWeights((e==null?void 0:e.weights)||[],t,a);return n.tokens=this.formatPoolTokens(e.poolTokens,a,m,o),n.amp="0",e!=null&&e.amp&&(n.amp=e.amp.value.div(e.amp.precision).toString()),n.swapEnabled=!0,e.swapEnabled!==void 0&&(n.swapEnabled=e.swapEnabled),e!=null&&e.linearPools&&(n.linearPools=this.formatLinearPools(e.linearPools)),e.tokenRates&&(n.tokenRates=e.tokenRates.map(u=>y(u.toString(),18))),n.totalSupply=y(e.totalSupply,e.decimals),n.decimals=e.decimals,n.swapFee=y(e.swapFee,18),n}formatPoolTokens(e,t,a,o){const n={};return e.tokens.forEach((s,m)=>{var p,r,d,v;const u=e.balances[m],i=(p=t[s])==null?void 0:p.decimals;n[s.toLowerCase()]={decimals:i,balance:y(u,i),weight:a[m],symbol:(r=t[s])==null?void 0:r.symbol,name:(d=t[s])==null?void 0:d.name,logoURI:(v=t[s])==null?void 0:v.logoURI}}),delete n[o.toLowerCase()],n}formatLinearPools(e){const t={};return Object.keys(e).forEach(a=>{const{id:o,mainToken:n,wrappedToken:s,priceRate:m,unwrappedTokenAddress:u,unwrappedERC4626Address:i,tokenData:p,totalSupply:r}=e[a],d=u||i||s.address;t[a.toLowerCase()]={id:o,priceRate:y(m.toString(),18),mainToken:{address:g(n.address),index:n.index.toNumber(),balance:p.balances[n.index.toNumber()].toString()},wrappedToken:{address:g(s.address),index:s.index.toNumber(),balance:p.balances[s.index.toNumber()].toString(),priceRate:y(s.rate,18)},unwrappedTokenAddress:d,totalSupply:y(r,18)}}),t}normalizeWeights(e,t,a){if(w(t))return D(e).map(o=>Number(y(o,18)));if(I(t)){const o=Object.values(a);return o.map(()=>1/o.length)}else return[]}get address(){return this.service.config.addresses.vault}}const b=[{name:"CommitOwnership",inputs:[{name:"admin",type:"address",indexed:!1}],anonymous:!1,type:"event"},{name:"ApplyOwnership",inputs:[{name:"admin",type:"address",indexed:!1}],anonymous:!1,type:"event"},{name:"Deposit",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1},{name:"locktime",type:"uint256",indexed:!0},{name:"type",type:"int128",indexed:!1},{name:"ts",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Withdraw",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1},{name:"ts",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Supply",inputs:[{name:"prevSupply",type:"uint256",indexed:!1},{name:"supply",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{stateMutability:"nonpayable",type:"constructor",inputs:[{name:"token_addr",type:"address"},{name:"_name",type:"string"},{name:"_symbol",type:"string"},{name:"_version",type:"string"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"commit_transfer_ownership",inputs:[{name:"addr",type:"address"}],outputs:[],gas:39445},{stateMutability:"nonpayable",type:"function",name:"apply_transfer_ownership",inputs:[],outputs:[],gas:41536},{stateMutability:"nonpayable",type:"function",name:"commit_smart_wallet_checker",inputs:[{name:"addr",type:"address"}],outputs:[],gas:37665},{stateMutability:"nonpayable",type:"function",name:"apply_smart_wallet_checker",inputs:[],outputs:[],gas:39641},{stateMutability:"view",type:"function",name:"get_last_user_slope",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"int128"}],gas:5124},{stateMutability:"view",type:"function",name:"user_point_history__ts",inputs:[{name:"_addr",type:"address"},{name:"_idx",type:"uint256"}],outputs:[{name:"",type:"uint256"}],gas:2927},{stateMutability:"view",type:"function",name:"locked__end",inputs:[{name:"_addr",type:"address"}],outputs:[{name:"",type:"uint256"}],gas:2912},{stateMutability:"nonpayable",type:"function",name:"checkpoint",inputs:[],outputs:[],gas:37283250},{stateMutability:"nonpayable",type:"function",name:"deposit_for",inputs:[{name:"_addr",type:"address"},{name:"_value",type:"uint256"}],outputs:[],gas:37475758},{stateMutability:"nonpayable",type:"function",name:"create_lock",inputs:[{name:"_value",type:"uint256"},{name:"_unlock_time",type:"uint256"}],outputs:[],gas:37483576},{stateMutability:"nonpayable",type:"function",name:"increase_amount",inputs:[{name:"_value",type:"uint256"}],outputs:[],gas:37479799},{stateMutability:"nonpayable",type:"function",name:"increase_unlock_time",inputs:[{name:"_unlock_time",type:"uint256"}],outputs:[],gas:37486953},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[],outputs:[],gas:37465773},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"uint256"}],gas:12660},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"addr",type:"address"},{name:"_t",type:"uint256"}],outputs:[{name:"",type:"uint256"}],gas:12660},{stateMutability:"view",type:"function",name:"balanceOfAt",inputs:[{name:"addr",type:"address"},{name:"_block",type:"uint256"}],outputs:[{name:"",type:"uint256"}],gas:792910},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[],outputs:[{name:"",type:"uint256"}],gas:905026},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[{name:"t",type:"uint256"}],outputs:[{name:"",type:"uint256"}],gas:905026},{stateMutability:"view",type:"function",name:"totalSupplyAt",inputs:[{name:"_block",type:"uint256"}],outputs:[{name:"",type:"uint256"}],gas:1287488},{stateMutability:"view",type:"function",name:"token",inputs:[],outputs:[{name:"",type:"address"}],gas:2970},{stateMutability:"view",type:"function",name:"supply",inputs:[],outputs:[{name:"",type:"uint256"}],gas:3e3},{stateMutability:"view",type:"function",name:"locked",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"tuple",components:[{name:"amount",type:"int128"},{name:"end",type:"uint256"}]}],gas:5453},{stateMutability:"view",type:"function",name:"epoch",inputs:[],outputs:[{name:"",type:"uint256"}],gas:3060},{stateMutability:"view",type:"function",name:"point_history",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"tuple",components:[{name:"bias",type:"int128"},{name:"slope",type:"int128"},{name:"ts",type:"uint256"},{name:"blk",type:"uint256"}]}],gas:9524},{stateMutability:"view",type:"function",name:"user_point_history",inputs:[{name:"arg0",type:"address"},{name:"arg1",type:"uint256"}],outputs:[{name:"",type:"tuple",components:[{name:"bias",type:"int128"},{name:"slope",type:"int128"},{name:"ts",type:"uint256"},{name:"blk",type:"uint256"}]}],gas:9820},{stateMutability:"view",type:"function",name:"user_point_epoch",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}],gas:3416},{stateMutability:"view",type:"function",name:"slope_changes",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"int128"}],gas:3295},{stateMutability:"view",type:"function",name:"name",inputs:[],outputs:[{name:"",type:"string"}],gas:13499},{stateMutability:"view",type:"function",name:"symbol",inputs:[],outputs:[{name:"",type:"string"}],gas:11258},{stateMutability:"view",type:"function",name:"version",inputs:[],outputs:[{name:"",type:"string"}],gas:11288},{stateMutability:"view",type:"function",name:"decimals",inputs:[],outputs:[{name:"",type:"uint256"}],gas:3300},{stateMutability:"view",type:"function",name:"future_smart_wallet_checker",inputs:[],outputs:[{name:"",type:"address"}],gas:3330},{stateMutability:"view",type:"function",name:"smart_wallet_checker",inputs:[],outputs:[{name:"",type:"address"}],gas:3360},{stateMutability:"view",type:"function",name:"admin",inputs:[],outputs:[{name:"",type:"address"}],gas:3390},{stateMutability:"view",type:"function",name:"future_admin",inputs:[],outputs:[{name:"",type:"address"}],gas:3420}];class ee{constructor(e){c(this,"service");this.service=e}parseDate(e){return(A(new Date(e))/1e3).toString()}async getLockInfo(e){const t=P(),a=new t(this.service.config.key,this.service.provider,b);a.call("locked",this.address,"locked",[e]),a.call("epoch",this.address,"epoch"),a.call("totalSupply",this.address,"totalSupply()");const o=await a.execute();return this.formatLockInfo(o)}formatLockInfo(e){const[t,a]=e.locked,o=t.gt(0),n=C(a.toNumber()),s=o&&Date.now()>n;return{lockedEndDate:n,lockedAmount:y(t,18),totalSupply:y(e.totalSupply,18),epoch:e.epoch.toString(),hasExistingLock:o,isExpired:s}}async createLock(e,t,a){return await new T(e.getSigner()).contract.sendTransaction({contractAddress:this.address,abi:b,action:"create_lock",params:[h(t,18),this.parseDate(a)]})}async increaseLock(e,t){return await new T(e.getSigner()).contract.sendTransaction({contractAddress:this.address,abi:b,action:"increase_amount",params:[h(t,18)]})}async extendLock(e,t){return await new T(e.getSigner()).contract.sendTransaction({contractAddress:this.address,abi:b,action:"increase_unlock_time",params:[this.parseDate(t)]})}async unlock(e){return await new T(e.getSigner()).contract.sendTransaction({contractAddress:this.address,abi:b,action:"withdraw"})}get address(){return this.service.config.addresses.veBAL}}class te{constructor(e=j,t=B,a=W){c(this,"vault");c(this,"config");c(this,"provider");c(this,"veBAL");this.configService=e,this.rpcProviderService=t,this.sdk=a,this.provider=this.rpcProviderService.jsonProvider,this.config=this.configService.network,this.vault=new Z(this),this.veBAL=new ee(this)}get allPoolABIs(){return Object.values(Object.fromEntries([...f.WeightedPool__factory.abi,...f.StablePool__factory.abi,...f.InvestmentPool__factory.abi,...z,...L,...V,...E,...O].map(e=>[e.name,e])))}}const ne=new te;function ce(l={}){const{account:e,isWalletReady:t}=R(),{networkId:a}=q(),o=J(()=>t.value&&Q.value),n=()=>ne.veBAL.getLockInfo(e.value),s=k({enabled:o,...l});return F(k(["tokens","veBAL",{networkId:a,account:e}]),n,s)}export{te as B,ne as b,ce as u};
//# sourceMappingURL=useVeBalLockInfoQuery-e92ea085.js.map
