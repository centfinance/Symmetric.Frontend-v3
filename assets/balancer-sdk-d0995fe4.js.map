{"version":3,"file":"balancer-sdk-d0995fe4.js","sources":["../../src/components/_global/BalModal/BalModal.vue","../../src/lib/balancer.sdk.ts","../../src/dependencies/balancer-sdk.ts"],"sourcesContent":["<script lang=\"ts\" setup>\nimport BalCard from '../BalCard/BalCard.vue';\n\n/**\n * TYPES\n */\ntype Props = {\n  show?: boolean;\n  title?: string;\n  noPad?: boolean;\n  noContentPad?: boolean;\n  fireworks?: boolean;\n};\n\n/**\n * PROPS & EMITS\n */\n\nconst props = withDefaults(defineProps<Props>(), {\n  show: false,\n  title: '',\n  noPad: false,\n  noContentPad: false,\n  fireworks: false,\n});\n\ndefineEmits(['close']);\n\n/**\n * STATE\n */\nconst showContent = ref(false);\n\n/**\n * METHODS\n */\nfunction hide(): void {\n  showContent.value = false;\n}\n\nwatch(\n  () => props.show,\n  () => {\n    if (props.show) {\n      document.body.classList.add('overflow-hidden');\n    } else {\n      document.body.classList.remove('overflow-hidden');\n    }\n  }\n);\n\n/**\n * EXPOSE\n */\ndefineExpose({ hide });\n</script>\n\n<template>\n  <div v-if=\"show\" class=\"bal-modal\" role=\"dialog\" @keyup.esc=\"hide\">\n    <transition name=\"overlay\" appear @after-enter=\"showContent = true\">\n      <div class=\"modal-bg\" @click=\"hide\">\n        <div v-if=\"fireworks\" class=\"fireworks\">\n          <div class=\"before\" />\n          <div class=\"after\" />\n        </div>\n      </div>\n    </transition>\n    <div class=\"content-container\">\n      <Transition name=\"modal\" @after-leave=\"$emit('close')\">\n        <div v-if=\"showContent\" class=\"content\">\n          <BalCard\n            :title=\"title\"\n            shadow=\"lg\"\n            :noPad=\"noPad\"\n            :noContentPad=\"noContentPad\"\n            class=\"modal-card\"\n            noBorder\n            overflowYScroll\n          >\n            <template v-if=\"$slots.header\" #header>\n              <slot name=\"header\" />\n            </template>\n            <slot />\n            <template v-if=\"$slots.footer\" #footer>\n              <slot name=\"footer\" />\n            </template>\n          </BalCard>\n        </div>\n      </Transition>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.bal-modal {\n  @apply top-0 left-0 fixed h-screen w-full z-40;\n}\n\n.content-container {\n  @apply flex h-screen items-end sm:items-center justify-center;\n}\n\n.content {\n  @apply relative w-full h-3/4 sm:h-auto max-h-screen;\n\n  max-width: 450px;\n  transform-style: preserve-3d;\n}\n\n.modal-bg {\n  @apply absolute h-full w-full bg-black/90;\n}\n\n.modal-card {\n  @apply mx-auto h-full rounded-b-none sm:rounded-b-lg dark:border-0 relative;\n}\n\n.dark .bal-modal .content::before {\n  background-blend-mode: soft-light, soft-light, normal;\n  background: radial-gradient(circle at left, yellow, transparent),\n    radial-gradient(circle at bottom right, blue, transparent),\n    radial-gradient(circle at top, red, transparent);\n  content: '';\n  display: block;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  z-index: 0;\n  filter: blur(80px);\n  transform: translateZ(-1px);\n  animation: fadeInMoveUpScaleUp 0.2s ease-out both;\n}\n\n/* Overlay animation */\n.overlay-enter-active,\n.overlay-leave-active {\n  transition: all 0.2s ease-in-out;\n}\n\n.overlay-enter-from,\n.overlay-leave-to {\n  opacity: 0;\n}\n\n/* Modal animation */\n.modal-enter-active,\n.modal-leave-active {\n  transition: all 0.2s ease-out;\n}\n\n.modal-enter-from,\n.modal-leave-to {\n  transform: translateY(10px);\n  opacity: 0;\n}\n</style>\n","import { BalancerSDK } from '@balancer-labs/sdk';\nimport { Network } from '@/lib/config/types';\n// import { configService } from '@/services/config/config.service';\nimport { ref } from 'vue';\nimport { isTestMode } from '@/plugins/modes';\n\n// const customNetwork = {\n//   chainId: configService.network.chainId,\n//   addresses: {\n//     contracts: {\n//       vault: configService.network.addresses.vault,\n//       multicall: configService.network.addresses.multicall,\n//       poolDataQueries: configService.network.addresses.balancerQueries,\n//       balancerHelpers: configService.network.addresses.balancerHelpers,\n//       balancerRelayer: configService.network.addresses.batchRelayer,\n//       weightedPoolFactory: configService.network.addresses.weightedPoolFactory,\n//       composableStablePoolFactory:\n//         configService.network.addresses.stablePoolFactory,\n//     },\n//     tokens: {\n//       wrappedNativeAsset: configService.network.tokens.Addresses.wNativeAsset,\n//       stETH: configService.network.tokens.Addresses.wstETH,\n//       wstETH: configService.network.tokens.Addresses.wstETH,\n//       bal: configService.network.tokens.Addresses.wNativeAsset,\n//     },\n//   },\n//   urls: {\n//     subgraph:\n//       'https://app.goldsky.com/dashboard/subgraphs/symmetric-telos-testnet/1.0.0',\n//     gaugesSubgraph: '',\n//     blockNumberSubgraph: '',\n//   },\n//   thirdParty: {\n//     coingecko: {\n//       nativeAssetId: 'telos',\n//       platformId: 'telos',\n//     },\n//   },\n//   pools: {},\n// };\n\nexport const balancer = new BalancerSDK({\n  network: Network.TELOSTESTNET,\n  rpcUrl: 'https://testnet15a.telos.net/evm',\n  customSubgraphUrl:\n    'https://api.goldsky.com/api/public/project_clnbo3e3c16lj33xva5r2aqk7/subgraphs/symmetric-telos-testnet/1.0.0/gn',\n  sor: {\n    tokenPriceService: 'subgraph',\n  },\n});\n\nconsole.log(balancer);\nexport const hasFetchedPoolsForSor = ref(false);\n\nexport async function fetchPoolsForSor() {\n  if (hasFetchedPoolsForSor.value) return;\n\n  console.time('fetchPoolsForSor');\n  await balancer.swaps.fetchPools();\n  hasFetchedPoolsForSor.value = true;\n  console.timeEnd('fetchPoolsForSor');\n}\n\nif (!isTestMode()) fetchPoolsForSor();\n","// eslint-disable-next-line no-restricted-imports\nimport { balancer } from '@/lib/balancer.sdk';\nimport { handleDependencyError } from '.';\n\n// Initializing this heavy dependency by default we avoid calling initBalancerSDK in initDependencies from main.ts\n// so that we avoid including in in the initial bundle\n// as it is only imported when used via getBalancerSDK\nlet _balancer: typeof balancer = balancer;\n\n/**\n * Uses the real balancer instance by default but allows injecting balancer mocks from tests\n */\nexport function initBalancerSDK(balancerInstance: typeof balancer = balancer) {\n  _balancer = balancerInstance;\n}\n\nexport function getBalancerSDK() {\n  if (!_balancer) {\n    handleDependencyError('balancer SDK');\n  }\n  return _balancer;\n}\n"],"names":["showContent","ref","hide","watch","props","__expose","balancer","BalancerSDK","Network","hasFetchedPoolsForSor","fetchPoolsForSor","_balancer","getBalancerSDK","handleDependencyError"],"mappings":"y0BA+BAA,EAAAC,EAAA,EAAA,EAKA,SAAAC,GAAA,CACEF,EAAA,MAAA,EAAoB,CAGtB,OAAAG,EAAA,IAAAC,EAAA,KACc,IAAA,CAEVA,EAAA,KACE,SAAA,KAAA,UAAA,IAAA,iBAAA,EAEA,SAAA,KAAA,UAAA,OAAA,iBAAA,CACF,CACF,EAMFC,EAAA,CAAA,KAAAH,CAAA,CAAA,g3BCbaI,EAAW,IAAIC,EAAY,CACtC,QAASC,EAAQ,aACjB,OAAQ,mCACR,kBACE,kHACF,IAAK,CACH,kBAAmB,UACrB,CACF,CAAC,EAED,QAAQ,IAAIF,CAAQ,EACP,MAAAG,EAAwBR,EAAI,EAAK,EAE9C,eAAsBS,GAAmB,CACnCD,EAAsB,QAE1B,QAAQ,KAAK,kBAAkB,EACzB,MAAAH,EAAS,MAAM,aACrBG,EAAsB,MAAQ,GAC9B,QAAQ,QAAQ,kBAAkB,EACpC,CAEoCC,EAAA,ECxDpC,IAAIC,EAA6BL,EAS1B,SAASM,GAAiB,CAC/B,OAAKD,GACHE,EAAsB,cAAc,EAE/BF,CACT"}