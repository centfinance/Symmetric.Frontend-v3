import{aZ as Z,a_ as $,aW as x,av as T,aq as V,aX as X,b6 as z}from"./BalBtn-cca6788c.js";import{s as B,u as J}from"./user-data.provider-8fbcf693.js";import{Q as q,W as ee,aa as U,U as ae,Z as re,o as te}from"./connector-16147cef.js";import{aj as W,u as s,ak as oe,r as se}from"./runtime-core.esm-bundler-558f8953.js";import{i as d}from"./useQueryHelpers-8fe10019.js";import{L as y}from"./liquidity-gauge-c56bdf84.js";function ue(t,r={}){const i=W(Z.Pool.Gauges(t)),c=s(()=>!!(t!=null&&t.value)),u=s(()=>{var o,v;return{__name:"PoolGauges",pool:{__args:{id:(o=t.value)==null?void 0:o.toLowerCase()},preferentialGauge:{id:!0},gauges:{id:!0,relativeWeightCap:!0}},liquidityGauges:{__args:{where:{poolAddress:(v=t.value)==null?void 0:v.toLowerCase()}},id:!0}}}),f=async()=>{try{return await B({url:q.network.subgraphs.gauge,query:u.value})}catch(o){throw console.error(`Failed to fetch pool gauge for pool: ${t.value}`,{cause:o}),o}},n=W({enabled:c,refetchOnWindowFocus:!1,...r});return $(i,f,n)}const ne=t=>{const r=se(t),i=s(()=>r.value?ee(r.value):void 0),{balanceFor:c}=T(),{account:u,isWalletReady:f}=V(),n=ue(i),{data:o,refetch:v}=n,{userGaugeSharesQuery:w,userBoostsQuery:m,stakedSharesQuery:S}=J(),{data:h,refetch:_}=w,{data:b,refetch:L}=m,{data:p,refetch:G,isRefetching:E}=S,C=s(()=>d(n)||f.value&&(d(S)||d(w)||d(m))),g=s(()=>{var e,a,l;return(l=(a=(e=o.value)==null?void 0:e.pool)==null?void 0:a.preferentialGauge)==null?void 0:l.id}),F=s(()=>{var e,a,l;return!!r.value&&((l=(a=(e=o.value)==null?void 0:e.liquidityGauges)==null?void 0:a[0])==null?void 0:l.id)!==void 0&&U.Stakable.VotingGaugePools.concat(U.Stakable.AllowList).includes(r.value)}),I=s(()=>{var e;return r.value&&((e=p==null?void 0:p.value)==null?void 0:e[r.value])||"0"}),R=s(()=>!b.value||!r.value?"1":b[r.value]),O=s(()=>{var e;return((e=o.value)==null?void 0:e.pool.gauges.map(a=>a.id))||[]}),K=s(()=>h.value?h.value.reduce((e,a)=>(e[a.gauge.id]=a.balance,e),{}):{}),N=s(()=>{if(!o.value||!h.value||!g.value)return!1;const e=g.value;return O.value.some(a=>!ae(a,e)&&re(K.value[a]||"0").gt(0))});function j(e){r.value=e}async function A(){return Promise.all([v(),G(),_(),L()])}async function D(){if(!i.value)throw new Error("No pool to stake.");if(!g.value)throw new Error(`No preferential gauge found for this pool: ${r.value}`);const e=new y(g.value),a=z(c(te(i.value)));return await e.stake(a)}async function H(){var k,P;if(!((P=(k=o.value)==null?void 0:k.pool)!=null&&P.gauges))throw new Error("Unable to unstake, no pool gauges");const a=(await le(o.value,u.value))[0],l=new y(a.id),Y=await l.balance(u.value);return await l.unstake(Y)}async function M(e){try{return(await B({url:q.network.subgraphs.gauge,query:{pool:{__args:{id:e.toLowerCase()},preferentialGauge:{id:!0}}}})).pool.preferentialGauge.id}catch(a){throw console.error(a),a}}return{isLoading:C,stakedShares:I,isStakablePool:F,boost:R,hasNonPrefGaugeBalance:N,isRefetchingStakedShares:E,refetchStakedShares:G,preferentialGaugeAddress:g,fetchPreferentialGaugeAddress:M,setCurrentPool:j,refetchAllPoolStakingData:A,stake:D,unstake:H,poolGauges:o}},Q=Symbol(X.Providers.PoolStaking);function he(t){oe(Q,ne(t))}function pe(){return x(Q)}async function le(t,r){const c=(await Promise.all(t.pool.gauges.map(async u=>{const n=await new y(u.id).balance(r);return{...u,balance:n==null?void 0:n.toString()}}))).filter(u=>u.balance!=="0");if(c.length===0)throw new Error("User doesn't have any balance for any gauges.");return c}export{he as p,pe as u};
//# sourceMappingURL=pool-staking.provider-e441fa29.js.map
