{"version":3,"file":"metamask.connector-0225016b.js","sources":["../../src/services/web3/connectors/metamask/metamask.connector.ts"],"sourcesContent":["import { WalletError } from '@/types';\n\nimport { Connector, ConnectorId } from '../connector';\n\ntype NonMetaMaskFlag =\n  | 'isRabby'\n  | 'isBraveWallet'\n  | 'isTrustWallet'\n  | 'isLedgerConnect';\n\nconst allNonMetamaskFlags: NonMetaMaskFlag[] = [\n  'isRabby',\n  'isBraveWallet',\n  'isTrustWallet',\n  'isLedgerConnect',\n];\n\nexport const getIsMetaMaskWallet = () =>\n  Boolean(\n    window.ethereum?.isMetaMask &&\n      !allNonMetamaskFlags.some(flag => window.ethereum?.[flag])\n  );\n\nexport function getInjectedProvider() {\n  const ethereum: any = window.ethereum;\n  let provider = ethereum || (window as any).web3?.currentProvider;\n\n  // if multiple providers are injected and one of them is Metamask, prefer Metamask\n  if (ethereum?.providers?.length) {\n    ethereum.providers.forEach(p => {\n      if (p.isMetaMask) provider = p;\n    });\n  }\n  return provider;\n}\n\nexport function hasInjectedProvider(): boolean {\n  return !!getInjectedProvider();\n}\n\nexport class MetamaskConnector extends Connector {\n  id = ConnectorId.InjectedMetaMask;\n  async connect() {\n    const provider = getInjectedProvider();\n    // store userRejectedRequest error if the user rejects connection\n    let userRejectedRequest = false;\n\n    if (provider) {\n      this.provider = provider;\n      this.active.value = true;\n\n      let accounts = null;\n      let chainId = null;\n      // try the best practice way of get accounts with eth_requestAccounts && eth_chainId\n      try {\n        if (provider.request) {\n          accounts = await provider.request({\n            method: 'eth_requestAccounts',\n          });\n\n          chainId = await provider.request({ method: 'eth_chainId' });\n        }\n      } catch (err) {\n        if ((err as WalletError).code === 4001) {\n          // EIP-1193 userRejectedRequest error\n          // If this happens, the user rejected the connection request.\n          userRejectedRequest = true;\n          console.log('Please connect to MetaMask.');\n        } else {\n          console.error(err);\n        }\n      }\n\n      // if account is still moot and user did not reject the connection request, try the bad old way - enable()\n      if (!accounts && !userRejectedRequest) {\n        // have to any it, since enable technically shouldn't be there anymore.\n        // but might, for legacy clients.\n        const response = await (provider as any).enable();\n        accounts = response?.result || response;\n      }\n\n      if (accounts && chainId) {\n        this.handleChainChanged(chainId);\n        this.handleAccountsChanged(accounts);\n      }\n    } else {\n      console.error(\n        'Tried to connect to MetaMask but it was not detected. Please install MetaMask.'\n      );\n    }\n    return {\n      // TODO type this\n      provider: provider as any,\n      account: this.account,\n      chainId: this.chainId,\n    };\n  }\n}\n\nexport const MetamaskConnectorType = typeof MetamaskConnector;\n"],"names":["allNonMetamaskFlags","getIsMetaMaskWallet","_a","flag","getInjectedProvider","ethereum","provider","_b","p","hasInjectedProvider","MetamaskConnector","Connector","__publicField","ConnectorId","userRejectedRequest","accounts","chainId","err","response","MetamaskConnectorType"],"mappings":"mTAUA,MAAMA,EAAyC,CAC7C,UACA,gBACA,gBACA,iBACF,EAEaC,EAAsB,IAAA,OACjC,iBACEC,EAAA,OAAO,WAAP,YAAAA,EAAiB,aACf,CAACF,EAAoB,KAAaG,UAAA,OAAAD,EAAA,OAAO,WAAP,YAAAA,EAAkBC,GAAK,CAC7D,GAEK,SAASC,GAAsB,SACpC,MAAMC,EAAgB,OAAO,SACzB,IAAAC,EAAWD,KAAaH,EAAA,OAAe,OAAf,YAAAA,EAAqB,iBAG7C,OAAAK,EAAAF,GAAA,YAAAA,EAAU,YAAV,MAAAE,EAAqB,QACdF,EAAA,UAAU,QAAaG,GAAA,CAC1BA,EAAE,aAAuBF,EAAAE,EAAA,CAC9B,EAEIF,CACT,CAEO,SAASG,GAA+B,CACtC,MAAA,CAAC,CAACL,GACX,CAEO,MAAMM,UAA0BC,CAAU,CAA1C,kCACLC,EAAA,UAAKC,EAAY,kBACjB,MAAM,SAAU,CACd,MAAMP,EAAWF,IAEjB,IAAIU,EAAsB,GAE1B,GAAIR,EAAU,CACZ,KAAK,SAAWA,EAChB,KAAK,OAAO,MAAQ,GAEpB,IAAIS,EAAW,KACXC,EAAU,KAEV,GAAA,CACEV,EAAS,UACAS,EAAA,MAAMT,EAAS,QAAQ,CAChC,OAAQ,qBAAA,CACT,EAEDU,EAAU,MAAMV,EAAS,QAAQ,CAAE,OAAQ,cAAe,SAErDW,GACFA,EAAoB,OAAS,MAGVH,EAAA,GACtB,QAAQ,IAAI,6BAA6B,GAEzC,QAAQ,MAAMG,CAAG,CAErB,CAGI,GAAA,CAACF,GAAY,CAACD,EAAqB,CAG/B,MAAAI,EAAW,MAAOZ,EAAiB,SACzCS,GAAWG,GAAA,YAAAA,EAAU,SAAUA,CACjC,CAEIH,GAAYC,IACd,KAAK,mBAAmBA,CAAO,EAC/B,KAAK,sBAAsBD,CAAQ,EACrC,MAEQ,QAAA,MACN,gFAAA,EAGG,MAAA,CAEL,SAAAT,EACA,QAAS,KAAK,QACd,QAAS,KAAK,OAAA,CAElB,CACF,CAEO,MAAMa,EAAwB,OAAOT"}