{"version":3,"file":"AppNav-48c30649.js","sources":["../../src/components/icons/IconDiscord.vue","../../src/components/icons/IconGithub.vue","../../src/components/icons/IconMedium.vue","../../src/components/icons/IconTwitter.vue","../../src/components/footer/Footer.vue","../../src/assets/images/logo.svg","../../src/components/images/AppIcon.vue","../../src/components/_global/icons/WalletIcon.vue","../../src/components/btns/DarkModeToggle.vue","../../src/components/navs/AppNav/AppNavSettings.vue","../../src/components/navs/AppNav/AppNavAccountBtn.vue","../../src/components/_global/icons/ActivityIcon.vue","../../src/components/navs/AppNav/AppNavActivityBtn/ActivityCounter.vue","../../src/components/_global/icons/CheckIcon.vue","../../src/components/navs/AppNav/AppNavActivityBtn/ActivityRows.vue","../../src/components/navs/AppNav/AppNavActivityBtn/AppNavActivityBtn.vue","../../src/components/navs/AppNav/AppNavNetworkSelect.vue","../../src/components/navs/AppNav/AppNavActions.vue","../../src/lib/utils/prefetch.ts","../../src/plugins/router/route-resolver.ts","../../src/components/links/PrefetchLinks.vue","../../src/components/navs/AppNav/DesktopLinks/DesktopLinkItem.vue","../../src/components/navs/AppNav/DesktopLinks/DesktopLinks.vue","../../src/components/navs/AppNav/AppNav.vue"],"sourcesContent":["<template>\n  <svg\n    id=\"discord\"\n    class=\"social-icon logo-group\"\n    width=\"32\"\n    height=\"32\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    aria-labelledby=\"discordTitle\"\n    role=\"img\"\n  >\n    <title id=\"discordTitle\">Link to Balancer's Discord</title>\n    <g fill=\"none\" fill-rule=\"evenodd\">\n      <path\n        class=\"bg\"\n        d=\"M15.981 0C7.167 0 .02 7.163.02 16c0 8.836 7.148 16 15.962 16 8.815 0 15.962-7.164 15.962-16 0-8.837-7.147-16-15.962-16z\"\n        fill=\"#FFF\"\n      />\n      <path\n        class=\"logo\"\n        d=\"M20.302 24.464l-.494-1.727L21 23.848l1.127 1.045 2.002 1.774V9.923A1.916 1.916 0 0022.219 8H9.744a1.916 1.916 0 00-1.91 1.923V22.54c0 1.064.857 1.923 1.91 1.923h10.559zm-1.676-4.275l-.615-.756c1.22-.345 1.685-1.11 1.685-1.11-.381.252-.745.429-1.07.55a6.118 6.118 0 01-1.35.402 6.508 6.508 0 01-2.412-.01 7.802 7.802 0 01-1.369-.401 5.45 5.45 0 01-.68-.317l-.037-.022-.01-.004-.037-.021-.037-.028-.26-.159s.446.747 1.629 1.102l-.624.774c-2.058-.065-2.84-1.418-2.84-1.418 0-3.006 1.341-5.442 1.341-5.442 1.34-1.008 2.617-.98 2.617-.98l.093.112c-1.676.486-2.45 1.223-2.45 1.223l.55-.27c.996-.44 1.788-.56 2.114-.589l.158-.018a7.577 7.577 0 014.684.877s-.736-.7-2.319-1.185l.13-.15s1.276-.028 2.617.98c0 0 1.34 2.436 1.34 5.442 0 0-.761 1.302-2.848 1.418zm-.932-4.358c-.53 0-.95.466-.95 1.036 0 .569.429 1.036.95 1.036.531 0 .95-.467.95-1.036 0-.57-.419-1.036-.95-1.036zm-3.398 0c-.531 0-.95.466-.95 1.036 0 .569.428 1.036.95 1.036.53 0 .95-.467.95-1.036.009-.57-.42-1.036-.95-1.036z\"\n        fill=\"#000\"\n      />\n    </g>\n  </svg>\n</template>\n\n<script>\nexport default {};\n</script>\n\n<style scoped>\n.social-icon:hover .bg {\n  fill: #7289da;\n}\n</style>\n","<template>\n  <svg\n    id=\"github\"\n    class=\"social-icon\"\n    width=\"32\"\n    height=\"32\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    aria-labelledby=\"githubTitle\"\n    role=\"img\"\n  >\n    <title id=\"githubTitle\">Link to Balancer Lab's Github</title>\n    <g fill=\"none\">\n      <path\n        class=\"bg\"\n        d=\"M16.019 0C7.204 0 .057 7.164.057 16s7.147 16 15.962 16S31.98 24.836 31.98 16 24.834 0 16.02 0z\"\n        fill=\"#FFF\"\n      />\n      <path\n        class=\"logo\"\n        d=\"M18.97 24.821c-.472.092-.623-.198-.623-.448v-2.561c0-.87-.305-1.439-.64-1.728 2.075-.23 4.254-1.02 4.254-4.605 0-1.02-.363-1.852-.96-2.506.097-.236.416-1.185-.091-2.47 0 0-.78-.251-2.558.956a9.024 9.024 0 00-2.333-.312 8.95 8.95 0 00-2.332.313c-1.778-1.207-2.56-.956-2.56-.956-.505 1.285-.187 2.235-.09 2.47a3.614 3.614 0 00-.96 2.505c0 3.576 2.173 4.376 4.242 4.612-.266.233-.507.644-.59 1.248-.533.238-1.88.65-2.71-.776 0 0-.492-.896-1.428-.963 0 0-.908-.012-.063.568 0 0 .611.287 1.033 1.365 0 0 .539 1.667 3.13 1.102v1.737c0 .247-.15.536-.615.45a9.332 9.332 0 01-6.368-8.855c0-5.156 4.17-9.334 9.31-9.334 5.142 0 9.312 4.178 9.312 9.334a9.332 9.332 0 01-6.36 8.854z\"\n        fill=\"#000\"\n      />\n    </g>\n  </svg>\n</template>\n\n<script>\nexport default {};\n</script>\n\n<style scoped>\n.social-icon:hover .bg {\n  fill: #444;\n}\n</style>\n","<template>\n  <svg\n    id=\"medium\"\n    class=\"social-icon\"\n    width=\"32\"\n    height=\"32\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    aria-labelledby=\"mediumTitle\"\n    role=\"img\"\n  >\n    <title id=\"mediumTitle\">Link to Balancer's blog on Medium</title>\n    <g fill=\"none\" fill-rule=\"evenodd\">\n      <g fill-rule=\"nonzero\">\n        <path\n          class=\"bg\"\n          d=\"M16 0C7.185 0 .038 7.164.038 16S7.185 32 16 32s15.962-7.164 15.962-16S24.815 0 16 0z\"\n          fill=\"#FFF\"\n        />\n        <path\n          class=\"logo\"\n          d=\"M11.826 10.4c2.984 0 5.403 2.507 5.403 5.6 0 3.093-2.419 5.6-5.403 5.6-2.984 0-5.403-2.507-5.403-5.6 0-3.094 2.419-5.6 5.403-5.6zm8.624.328c1.492 0 2.702 2.361 2.702 5.272s-1.21 5.271-2.702 5.271-2.702-2.36-2.702-5.271c0-2.91 1.21-5.272 2.702-5.272zm4.17.549c.526 0 .95 2.115.95 4.723 0 2.608-.425 4.723-.95 4.723-.524 0-.95-2.115-.95-4.723 0-2.608.426-4.723.95-4.723z\"\n          fill=\"#000\"\n        />\n      </g>\n    </g>\n  </svg>\n</template>\n\n<script>\nexport default {};\n</script>\n\n<style scoped>\n.social-icon:hover .bg {\n  fill: rgb(26 137 23 / 100%);\n}\n</style>\n","<template>\n  <svg\n    id=\"twitter\"\n    class=\"social-icon\"\n    width=\"32\"\n    height=\"32\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    aria-labelledby=\"logoTitle\"\n    role=\"img\"\n  >\n    <title id=\"twitterTitle\">Link to Balancer's Twitter</title>\n    <g fill-rule=\"nonzero\" fill=\"none\">\n      <path\n        class=\"bg\"\n        d=\"M15.962 0C7.147 0 0 7.164 0 16s7.147 16 15.962 16 15.963-7.164 15.963-16S24.777 0 15.962 0z\"\n        fill=\"#FFF\"\n      />\n      <path\n        class=\"logo\"\n        d=\"M24.031 12.86c.244 5.387-3.764 11.392-10.86 11.392-2.157 0-4.164-.635-5.855-1.721a7.673 7.673 0 005.656-1.586 3.83 3.83 0 01-3.57-2.66c.6.115 1.19.082 1.726-.065-1.837-.37-3.106-2.03-3.064-3.804a3.805 3.805 0 001.73.479A3.84 3.84 0 018.612 9.78a10.836 10.836 0 007.874 4.002c-.557-2.395 1.256-4.703 3.724-4.703 1.097 0 2.09.465 2.788 1.21a7.61 7.61 0 002.426-.93 3.844 3.844 0 01-1.68 2.119 7.608 7.608 0 002.193-.604 7.679 7.679 0 01-1.906 1.985z\"\n        fill=\"#000\"\n      />\n    </g>\n  </svg>\n</template>\n\n<script>\nexport default {};\n</script>\n\n<style scoped>\n.social-icon:hover .bg {\n  fill: rgb(29 161 242 / 100%);\n}\n</style>\n","<script lang=\"ts\" setup>\nimport IconDiscord from '@/components/icons/IconDiscord.vue';\nimport IconGithub from '@/components/icons/IconGithub.vue';\n// import IconLinkedin from '@/components/icons/IconLinkedin.vue';\n// import IconMail from '@/components/icons/IconMail.vue';\nimport IconMedium from '@/components/icons/IconMedium.vue';\nimport IconTwitter from '@/components/icons/IconTwitter.vue';\n// import IconYoutube from '@/components/icons/IconYoutube.vue';\nimport { EXTERNAL_LINKS } from '@/constants/links';\n\nimport useNetwork from '@/composables/useNetwork';\n\nimport AppLogo from '../images/AppLogo.vue';\nimport { useThirdPartyServices } from '@/composables/useThirdPartyServices';\n\nconst { networkSlug } = useNetwork();\nconst { handleThirdPartyModalToggle } = useThirdPartyServices();\n</script>\n\n<template>\n  <footer v-once>\n    <div\n      class=\"xl:container lg:px-4 xl:mx-auto dark:border-t dark:border-gray-800\"\n    >\n      <div\n        class=\"flex flex-col md:flex-row gap-8 md:justify-between py-12 px-4 lg:px-0 text-primary\"\n      >\n        <div class=\"flex flex-col gap-8\">\n          <router-link\n            class=\"font-medium link\"\n            :to=\"{ name: 'home', params: { networkSlug } }\"\n          >\n            <AppLogo class=\"mb-4\" />\n          </router-link>\n\n          <div class=\"flex md:hidden flex-col gap-2\">\n            <p>\n              <router-link\n                class=\"text-lg font-medium link\"\n                :to=\"{ name: 'home', params: { networkSlug } }\"\n              >\n                {{ $t('pool') }}\n              </router-link>\n            </p>\n            <p>\n              <router-link\n                class=\"text-lg font-medium link\"\n                :to=\"{ name: 'swap', params: { networkSlug } }\"\n              >\n                {{ $t('swap') }}\n              </router-link>\n            </p>\n            <p>\n              <router-link\n                class=\"text-lg font-medium link\"\n                :to=\"{ name: 'claim', params: { networkSlug } }\"\n              >\n                {{ $t('claim') }}\n              </router-link>\n            </p>\n            <p>\n              <router-link\n                class=\"text-lg font-medium link\"\n                :to=\"{ name: 'portfolio', params: { networkSlug } }\"\n              >\n                {{ $t('portfolio') }}\n              </router-link>\n            </p>\n            <p>\n              <router-link\n                class=\"text-lg font-medium link\"\n                :to=\"{ name: 'vebal', params: { networkSlug } }\"\n              >\n                {{ $t('vebal') }}\n              </router-link>\n            </p>\n          </div>\n\n          <!-- <div class=\"flex flex-wrap gap-3 md:order-3 md:gap-4\">\n            <BalLink\n              :href=\"EXTERNAL_LINKS.Balancer.Home\"\n              external\n              noStyle\n              class=\"group link link--external\"\n            >\n              {{ $t('about') }}\n              <BalIcon name=\"arrow-up-right\" size=\"sm\" class=\"arrow\" />\n            </BalLink>\n\n            <BalLink\n              :href=\"EXTERNAL_LINKS.Balancer.Docs\"\n              external\n              noStyle\n              class=\"group link link--external\"\n            >\n              {{ $t('docs') }}\n              <BalIcon name=\"arrow-up-right\" size=\"sm\" class=\"arrow\" />\n            </BalLink>\n\n            <BalLink\n              :href=\"EXTERNAL_LINKS.Balancer.Forum\"\n              external\n              noStyle\n              class=\"group link link--external\"\n            >\n              {{ $t('forum') }}\n              <BalIcon name=\"arrow-up-right\" size=\"sm\" class=\"arrow\" />\n            </BalLink>\n\n            <BalLink\n              :href=\"EXTERNAL_LINKS.Balancer.Vote\"\n              external\n              noStyle\n              class=\"group link link--external\"\n            >\n              {{ $t('vote') }}\n              <BalIcon name=\"arrow-up-right\" size=\"sm\" class=\"arrow\" />\n            </BalLink>\n\n            <BalLink\n              :href=\"EXTERNAL_LINKS.Balancer.Grants\"\n              external\n              noStyle\n              class=\"group link link--external\"\n            >\n              {{ $t('grants') }}\n              <BalIcon name=\"arrow-up-right\" size=\"sm\" class=\"arrow\" />\n            </BalLink>\n\n            <BalLink\n              :href=\"EXTERNAL_LINKS.Balancer.BugBounty\"\n              external\n              noStyle\n              class=\"group link link--external\"\n            >\n              {{ $t('bugBounty') }}\n              <BalIcon name=\"arrow-up-right\" size=\"sm\" class=\"arrow\" />\n            </BalLink>\n\n            <BalLink\n              :href=\"EXTERNAL_LINKS.Balancer.Analytics\"\n              external\n              noStyle\n              class=\"group link link--external\"\n            >\n              {{ $t('analytics') }}\n              <BalIcon name=\"arrow-up-right\" size=\"sm\" class=\"arrow\" />\n            </BalLink>\n          </div> -->\n        </div>\n        <div class=\"flex flex-col gap-8\">\n          <div class=\"md:order-2\">\n            <div class=\"flex lg:flex-col md:justify-end\">\n              <div class=\"flex gap-3 md:justify-end\">\n                <BalLink\n                  :href=\"EXTERNAL_LINKS.Balancer.Social.Twitter\"\n                  external\n                  noStyle\n                >\n                  <IconTwitter />\n                </BalLink>\n                <BalLink\n                  :href=\"EXTERNAL_LINKS.Balancer.Social.Discord\"\n                  external\n                  noStyle\n                >\n                  <IconDiscord />\n                </BalLink>\n                <BalLink\n                  :href=\"EXTERNAL_LINKS.Balancer.Social.Medium\"\n                  external\n                  noStyle\n                >\n                  <IconMedium />\n                </BalLink>\n                <!-- <BalLink\n                  :href=\"EXTERNAL_LINKS.Balancer.Social.Youtube\"\n                  external\n                  noStyle\n                >\n                  <IconYoutube />\n                </BalLink> -->\n                <BalLink\n                  :href=\"EXTERNAL_LINKS.Balancer.Social.Github\"\n                  external\n                  noStyle\n                >\n                  <IconGithub />\n                </BalLink>\n                <!-- <BalLink\n                  :href=\"EXTERNAL_LINKS.Balancer.Social.Linkedin\"\n                  external\n                  noStyle\n                >\n                  <IconLinkedin />\n                </BalLink> -->\n                <!-- <BalLink\n                  :href=\"EXTERNAL_LINKS.Balancer.Social.Mail\"\n                  external\n                  noStyle\n                >\n                  <IconMail />\n                </BalLink> -->\n              </div>\n            </div>\n          </div>\n\n          <div\n            class=\"flex flex-wrap md:order-3 gap-x-3 lg:gap-x-4 gap-y-2 md:justify-end\"\n          >\n            <p>\n              <router-link class=\"policy\" :to=\"{ name: 'terms-of-use' }\">\n                {{ $t('policies.termsOfUse') }}\n              </router-link>\n            </p>\n            <p>\n              <router-link class=\"policy\" :to=\"{ name: 'privacy-policy' }\">\n                {{ $t('policies.privacyPolicy') }}\n              </router-link>\n            </p>\n            <p>\n              <router-link class=\"policy\" :to=\"{ name: 'cookies-policy' }\">\n                {{ $t('policies.cookiesPolicy') }}\n              </router-link>\n            </p>\n            <p>\n              <router-link class=\"policy\" :to=\"{ name: 'risks' }\">\n                {{ $t('policies.risks') }}\n              </router-link>\n            </p>\n            <p>\n              <span\n                class=\"cursor-pointer policy\"\n                @click=\"handleThirdPartyModalToggle(true)\"\n              >\n                {{ $t('policies.thirdPartyServices') }}\n              </span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </footer>\n</template>\n\n<style scoped>\nfooter {\n  @apply bg-gray-50 dark:bg-gray-900;\n}\n\nfooter :deep(.logotype) {\n  @apply origin-top-left;\n\n  transform: scale(1.5);\n}\n\n.link {\n  @apply text-black dark:text-white transition-colors flex items-center no-underline hover:text-purple-600;\n}\n\n.link--external {\n  @apply text-sm;\n}\n\n.link:hover,\n.link:focus-visible {\n  @apply text-purple-600 dark:text-yellow-500 no-underline;\n}\n\n.link:focus:not(:focus-visible) {\n  outline: none;\n}\n\n.policy {\n  @apply text-sm text-gray-600 dark:text-gray-400 hover:text-purple-600 dark:hover:text-yellow-500;\n}\n\n.arrow {\n  @apply text-gray-300 dark:text-gray-600 group-hover:text-purple-600 dark:group-hover:text-yellow-500;\n}\n\n.router-link-active {\n  @apply text-blue-600 dark:text-blue-400;\n}\n</style>\n","export default \"__VITE_ASSET__c2b3a5f0__\"","<script lang=\"ts\" setup>\nimport { computed } from 'vue';\n\nimport useDarkMode from '@/composables/useDarkMode';\n\n/**\n * TYPES\n */\ntype Props = {\n  forceDark?: boolean;\n};\n\n/**\n * PROPS & EMITS\n */\nconst props = withDefaults(defineProps<Props>(), {\n  forceDark: false,\n});\n\n/**\n * COMPOSABLES\n */\nconst { darkMode } = useDarkMode();\n\n/**\n * COMPUTED\n */\nconst useDarkLogo = computed(() => (props.forceDark ? true : darkMode.value));\n</script>\n\n<template>\n  <img\n    v-if=\"useDarkLogo\"\n    src=\"~@/assets/images/logo.svg\"\n    width=\"30\"\n    class=\"mr-2\"\n  />\n  <img v-else src=\"~@/assets/images/logo.svg\" width=\"30\" class=\"mr-2\" />\n</template>\n","<template>\n  <svg\n    width=\"18\"\n    height=\"19\"\n    viewBox=\"0 0 18 19\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M14 5.5V2.5C14 2.23478 13.8946 1.98043 13.7071 1.79289C13.5196 1.60536 13.2652 1.5 13 1.5H3C2.46957 1.5 1.96086 1.71071 1.58579 2.08579C1.21071 2.46086 1 2.96957 1 3.5M1 3.5C1 4.03043 1.21071 4.53914 1.58579 4.91421C1.96086 5.28929 2.46957 5.5 3 5.5H15C15.2652 5.5 15.5196 5.60536 15.7071 5.79289C15.8946 5.98043 16 6.23478 16 6.5V9.5M1 3.5V15.5C1 16.0304 1.21071 16.5391 1.58579 16.9142C1.96086 17.2893 2.46957 17.5 3 17.5H15C15.2652 17.5 15.5196 17.3946 15.7071 17.2071C15.8946 17.0196 16 16.7652 16 16.5V13.5\"\n      stroke=\"url(#wallet_gradient)\"\n      stroke-width=\"1.5\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <path\n      d=\"M17 9.5V13.5H13C12.4696 13.5 11.9609 13.2893 11.5858 12.9142C11.2107 12.5391 11 12.0304 11 11.5C11 10.9696 11.2107 10.4609 11.5858 10.0858C11.9609 9.71071 12.4696 9.5 13 9.5H17Z\"\n      stroke=\"url(#wallet_gradient)\"\n      stroke-width=\"1.5\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <defs>\n      <linearGradient\n        id=\"wallet_gradient\"\n        x1=\"8.5\"\n        y1=\"-6.5\"\n        x2=\"-7.46674\"\n        y2=\"8.46881\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stop-color=\"#FF00FF\" />\n        <stop offset=\"1\" stop-color=\"#0000FF\" />\n      </linearGradient>\n      <linearGradient\n        id=\"wallet_gradient\"\n        x1=\"14\"\n        y1=\"7.5\"\n        x2=\"10.3077\"\n        y2=\"13.0385\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stop-color=\"#FF00FF\" />\n        <stop offset=\"1\" stop-color=\"#0000FF\" />\n      </linearGradient>\n    </defs>\n  </svg>\n</template>\n","<script lang=\"ts\" setup>\nimport useBreakpoints from '@/composables/useBreakpoints';\nimport useDarkMode from '@/composables/useDarkMode';\n\n/**\n * COMPOSABLES\n */\nconst { isMobile } = useBreakpoints();\nconst { darkMode, toggleDarkMode } = useDarkMode();\n</script>\n\n<template>\n  <BalBtn\n    color=\"white\"\n    :size=\"isMobile ? 'md' : 'sm'\"\n    :circle=\"isMobile\"\n    @click=\"toggleDarkMode\"\n  >\n    <MoonIcon v-if=\"darkMode\" />\n    <SunIcon v-else />\n  </BalBtn>\n</template>\n","<script setup lang=\"ts\">\nimport AppSlippageForm from '@/components/forms/AppSlippageForm.vue';\nimport Avatar from '@/components/images/Avatar.vue';\nimport useEthereumTxType from '@/composables/useEthereumTxType';\nimport { ethereumTxTypeOptions } from '@/constants/options';\nimport useWeb3 from '@/services/web3/useWeb3';\nimport { shorten } from '@/lib/utils';\nimport useDarkMode from '@/composables/useDarkMode';\nimport { getConnectorLogo } from '@/services/web3/wallet-logos';\nimport { getConnectorName } from '@/services/web3/wallet-names';\nimport { useUserSettings } from '@/providers/user-settings.provider';\nimport { isEIP1559SupportedNetwork } from '@/composables/useNetwork';\nimport { Network } from '@/lib/config/types';\n\n// COMPOSABLES\nconst { darkMode, setDarkMode } = useDarkMode();\n\nconst {\n  account,\n  profile,\n  disconnectWallet,\n  toggleWalletSelectModal,\n  connector,\n  provider,\n  userNetworkConfig,\n  isUnsupportedNetwork,\n  explorerLinks,\n} = useWeb3();\nconst { ethereumTxType, setEthereumTxType } = useEthereumTxType();\nconst { supportSignatures, setSupportSignatures } = useUserSettings();\n\n// DATA\nconst data = reactive({\n  copiedAddress: false,\n});\n\n// COMPUTED\nconst avatarUri = computed(() => profile.value?.avatar || undefined);\nconst networkColorClass = computed(() => {\n  let color = 'green';\n\n  if (isUnsupportedNetwork.value) {\n    color = 'red';\n  } else {\n    switch (userNetworkConfig.value?.chainId) {\n      case Network.GOERLI:\n        color = 'blue';\n        break;\n    }\n  }\n\n  return `bg-${color}-500 dark:bg-${color}-400`;\n});\nconst networkName = computed(() => userNetworkConfig.value?.name);\nconst connectorName = computed(() =>\n  getConnectorName(connector.value?.id, provider.value)\n);\nconst connectorLogo = computed(() =>\n  getConnectorLogo(connector.value?.id, provider.value)\n);\nconst hideDisconnect = computed(() => connector.value?.id == 'safe');\n\n// METHODS\nfunction copyAddress() {\n  navigator.clipboard.writeText(account.value);\n  data.copiedAddress = true;\n\n  setTimeout(() => {\n    data.copiedAddress = false;\n  }, 2 * 1000);\n}\n</script>\n\n<template>\n  <div>\n    <div class=\"p-4 border-b dark:border-gray-900\">\n      <div class=\"flex justify-between items-center mb-6\">\n        <h5 class=\"tracking-tight leading-none\" v-text=\"$t('account')\" />\n        <div class=\"flex gap-2 items-center\">\n          <BalBtn color=\"gray\" size=\"xs\" @click=\"toggleWalletSelectModal\">\n            {{ $t('change') }}\n          </BalBtn>\n          <div v-if=\"!hideDisconnect\">\n            <BalBtn\n              outline\n              color=\"gray\"\n              size=\"xs\"\n              class=\"capitalize\"\n              @click=\"disconnectWallet\"\n            >\n              {{ $t('disconnect') }}\n            </BalBtn>\n          </div>\n        </div>\n      </div>\n      <div class=\"flex mt-1 mb-1\">\n        <div class=\"flex\">\n          <div class=\"relative\">\n            <Avatar :iconURI=\"avatarUri\" :address=\"account\" :size=\"44\" />\n            <div class=\"connector-icon-wrapper\">\n              <img\n                :src=\"connectorLogo\"\n                class=\"flex absolute right-0 bottom-0 justify-center items-center p-0.5 w-5 h-5 bg-white rounded-full\"\n              />\n            </div>\n          </div>\n          <div class=\"ml-2\">\n            <div class=\"flex items-baseline address\">\n              <div\n                class=\"font-bold text-black dark:text-white\"\n                v-text=\"shorten(account)\"\n              />\n              <div class=\"flex ml-3\">\n                <BalTooltip width=\"auto\">\n                  <template #activator>\n                    <BalBtn\n                      circle\n                      color=\"gray\"\n                      size=\"xs\"\n                      flat\n                      @click=\"copyAddress\"\n                    >\n                      <BalIcon\n                        v-if=\"data.copiedAddress\"\n                        name=\"check\"\n                        size=\"xs\"\n                      />\n                      <BalIcon v-else name=\"clipboard\" size=\"xs\" />\n                    </BalBtn>\n                  </template>\n                  <div\n                    class=\"text-center\"\n                    v-text=\"\n                      data.copiedAddress ? $t('copied') : $t('copyAddress')\n                    \"\n                  />\n                </BalTooltip>\n                <BalBtn\n                  circle\n                  flat\n                  color=\"gray\"\n                  size=\"xs\"\n                  tag=\"a\"\n                  :href=\"explorerLinks.addressLink(account)\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  class=\"ml-2\"\n                >\n                  <BalIcon name=\"arrow-up-right\" size=\"xs\" />\n                </BalBtn>\n              </div>\n            </div>\n            <div class=\"text-sm\">\n              {{ connectorName }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"hidden px-4 mt-4\">\n      <span class=\"mb-2 font-medium\" v-text=\"$t('theme')\" />\n      <div class=\"flex mt-1\">\n        <div\n          class=\"flex justify-center items-center py-1.5 mr-2 w-16 rounded-xl border cursor-pointer option\"\n          :class=\"{ active: !darkMode }\"\n          @click=\"setDarkMode(false)\"\n        >\n          <BalIcon name=\"sun\" size=\"sm\" />\n        </div>\n        <div\n          class=\"flex justify-center items-center py-1.5 mr-2 w-16 rounded-xl border cursor-pointer option\"\n          :class=\"{ active: darkMode }\"\n          @click=\"setDarkMode(true)\"\n        >\n          <BalIcon name=\"moon\" size=\"sm\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"px-4 mt-4\">\n      <div class=\"flex items-baseline\">\n        <span class=\"mb-2 font-medium\" v-text=\"$t('slippageTolerance')\" />\n        <BalTooltip>\n          <template #activator>\n            <BalIcon name=\"info\" size=\"xs\" class=\"-mb-px ml-1 text-gray-400\" />\n          </template>\n          <div v-html=\"$t('marketConditionsWarning')\" />\n        </BalTooltip>\n      </div>\n      <AppSlippageForm class=\"mt-1\" />\n    </div>\n    <div v-if=\"isEIP1559SupportedNetwork\" class=\"px-4 mt-6\">\n      <div class=\"flex items-baseline\">\n        <span class=\"mb-2 font-medium\" v-text=\"$t('transactionType')\" />\n        <BalTooltip>\n          <template #activator>\n            <BalIcon name=\"info\" size=\"xs\" class=\"-mb-px ml-1 text-gray-400\" />\n          </template>\n          <div v-text=\"$t('ethereumTxTypeTooltip')\" />\n        </BalTooltip>\n      </div>\n      <BalBtnGroup\n        v-model=\"ethereumTxType\"\n        :options=\"ethereumTxTypeOptions\"\n        @update:model-value=\"setEthereumTxType\"\n      />\n    </div>\n    <div class=\"px-4 mt-6\">\n      <div class=\"flex items-baseline\">\n        <span class=\"mb-2 font-medium\" v-text=\"$t('useSignatures')\" />\n        <BalTooltip>\n          <template #activator>\n            <BalIcon name=\"info\" size=\"xs\" class=\"-mb-px ml-1 text-gray-400\" />\n          </template>\n          <div v-text=\"$t('useSignaturesTooltip')\" />\n        </BalTooltip>\n      </div>\n      <BalToggle\n        v-model=\"supportSignatures\"\n        name=\"supportSignatures\"\n        @toggle=\"setSupportSignatures\"\n      />\n    </div>\n    <div\n      class=\"p-4 mt-4 text-sm rounded-b-xl border-t dark:border-gray-900 network\"\n    >\n      <div v-text=\"$t('network')\" />\n      <div class=\"flex items-baseline\">\n        <div :class=\"['w-2 h-2 mr-1 rounded-full', networkColorClass]\" />\n        {{ isUnsupportedNetwork ? $t('unsupportedNetwork') : networkName }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.address {\n  @apply text-blue-500;\n\n  font-variant-ligatures: no-contextual;\n}\n\n.option:hover {\n  @apply text-blue-500 border-blue-500;\n}\n\n.option.active {\n  @apply text-blue-500 border-blue-500;\n}\n\n.slippage-input {\n  @apply bg-white;\n}\n\n.slippage-input.active {\n  @apply text-blue-500 border-blue-500 border-2 ring;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\n\nimport Avatar from '@/components/images/Avatar.vue';\nimport useBreakpoints from '@/composables/useBreakpoints';\nimport useWeb3 from '@/services/web3/useWeb3';\nimport { shorten } from '@/lib/utils';\n\nimport AppNavSettings from './AppNavSettings.vue';\n\nconst { bp, upToLargeBreakpoint, isMobile } = useBreakpoints();\nconst { isLoadingProfile, profile, account } = useWeb3();\n\nconst avatarSize = computed(() => {\n  if (bp.value === 'sm') {\n    return 35;\n  } else if (['md', 'lg'].includes(bp.value)) {\n    return 40;\n  } else {\n    return 20;\n  }\n});\n</script>\n\n<template>\n  <BalPopover\n    noPad\n    :align=\"isMobile ? 'center' : undefined\"\n    :detached=\"isMobile ? true : undefined\"\n  >\n    <template #activator>\n      <BalBtn\n        class=\"text-base\"\n        :class=\"{ btn: upToLargeBreakpoint }\"\n        :loading=\"isLoadingProfile\"\n        :loadingLabel=\"upToLargeBreakpoint ? '' : $t('connecting')\"\n        color=\"white\"\n        :size=\"upToLargeBreakpoint ? 'md' : 'sm'\"\n        :circle=\"upToLargeBreakpoint\"\n      >\n        <Avatar\n          :iconURI=\"profile?.avatar || ''\"\n          :address=\"account\"\n          :size=\"avatarSize\"\n        />\n        <span\n          v-if=\"profile && profile.ens\"\n          class=\"hidden lg:inline-block pl-2\"\n          v-text=\"profile && profile.ens\"\n        />\n        <span\n          v-else\n          class=\"hidden lg:inline-block pl-2 eth-address\"\n          v-text=\"shorten(account)\"\n        />\n      </BalBtn>\n    </template>\n    <AppNavSettings />\n  </BalPopover>\n</template>\n\n\n","<template>\n  <svg\n    width=\"28\"\n    height=\"28\"\n    viewBox=\"0 0 28 28\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M25.6667 14H21L17.5 24.5L10.5 3.5L7 14H2.33334\"\n      stroke=\"url(#activity-icon-0)\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n    <defs>\n      <linearGradient\n        id=\"activity-icon-0\"\n        x1=\"14\"\n        y1=\"3.5\"\n        x2=\"14\"\n        y2=\"24.5\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stop-color=\"#66FFB1\" />\n        <stop offset=\"1\" stop-color=\"#10B981\" />\n      </linearGradient>\n    </defs>\n  </svg>\n</template>\n","<template>\n  <span class=\"relative text-orange-500\">\n    <span\n      class=\"absolute top-1/2 left-1/2 text-sm -translate-x-1/2 -translate-y-1/2\"\n    >\n      {{ count }}\n    </span>\n    <SpinnerIcon class=\"w-6 h-6 animate-spin\" />\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'ActivityCounter',\n\n  props: {\n    count: {\n      type: Number,\n      required: true,\n    },\n  },\n});\n</script>\n","<template>\n  <svg\n    width=\"19\"\n    height=\"20\"\n    viewBox=\"0 0 19 20\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <circle cx=\"9.5\" cy=\"10\" r=\"9.5\" fill=\"currentColor\" />\n    <path\n      d=\"M5 10.1L7.4 12.5L13.4 6.5\"\n      stroke=\"white\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n</template>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\n\nimport { Transaction } from '@/composables/useTransactions';\nimport useWeb3 from '@/services/web3/useWeb3';\n\ninterface Props {\n  transactions: Transaction[];\n  getExplorerLink: (id: string, type: Transaction['type']) => void;\n  cancelOrder: (orderId: string) => void;\n  isSuccessfulTransaction: (transaction: Transaction) => boolean;\n  isPendingTransactionStatus: (transaction: Transaction['status']) => boolean;\n}\n\ndefineProps<Props>();\n\n/**\n * COMPOSABLES\n */\nconst { connector } = useWeb3();\n\n/**\n * COMPUTED\n */\nconst disablePending = computed(() => connector.value?.id === 'gnosis');\n</script>\n\n<template>\n  <div>\n    <div v-for=\"transaction in transactions\" :key=\"transaction.id\" class=\"mb-3\">\n      <div class=\"row\">\n        <BalLink\n          :href=\"getExplorerLink(transaction.id, transaction.type)\"\n          :disabled=\"\n            disablePending && isPendingTransactionStatus(transaction.status)\n          \"\n          external\n          noStyle\n          class=\"group\"\n        >\n          <div class=\"flex items-center font-semibold\">\n            {{ $t(`transactionAction.${transaction.action}`) }}\n            <BalIcon\n              v-if=\"\n                !(\n                  disablePending &&\n                  isPendingTransactionStatus(transaction.status)\n                )\n              \"\n              name=\"arrow-up-right\"\n              size=\"sm\"\n              class=\"ml-1 text-gray-400 group-hover:text-pink-500 dark:text-gray-600 transition-colors\"\n            />\n          </div>\n          <div\n            class=\"text-sm group-hover:text-gray-900 dark:text-gray-400 dark:group-hover:text-white transition-colors text-secondary summary\"\n          >\n            {{ transaction.summary }}\n          </div>\n        </BalLink>\n        <div>\n          <SpinnerIcon\n            v-if=\"isPendingTransactionStatus(transaction.status)\"\n            class=\"text-orange-500 animate-spin\"\n          />\n          <template v-else>\n            <CheckIcon\n              v-if=\"isSuccessfulTransaction(transaction)\"\n              class=\"text-green-500\"\n            />\n            <BalTooltip v-else class=\"cursor-default\">\n              <template #activator>\n                <BalIcon name=\"alert-circle\" class=\"text-red-500\" />\n              </template>\n              <div class=\"failed-reason-tooltip\">\n                {{ $t(`transactionAction.${transaction.action}`) }}\n                {{ $t(`transactionStatus.${transaction.status}`) }}\n              </div>\n            </BalTooltip>\n          </template>\n        </div>\n      </div>\n      <div\n        v-if=\"\n          transaction.type === 'order' &&\n          isPendingTransactionStatus(transaction.status)\n        \"\n        class=\"mt-1\"\n      >\n        <BalBtn\n          size=\"xs\"\n          :label=\"$t('cancel')\"\n          :loading=\"transaction.status === 'cancelling'\"\n          :loadingLabel=\"$t('cancelling')\"\n          color=\"white\"\n          @click.prevent=\"cancelOrder(transaction.id)\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<style scoped>\n.row {\n  @apply flex justify-between items-center;\n}\n\n.row:last-child {\n  @apply mb-0;\n}\n\n.summary {\n  @apply overflow-hidden;\n\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n\n.failed-reason-tooltip {\n  @apply lowercase;\n}\n\n.failed-reason-tooltip::first-letter {\n  @apply uppercase;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { useI18n } from 'vue-i18n';\n\nimport useBreakpoints from '@/composables/useBreakpoints';\nimport useNotifications from '@/composables/useNotifications';\nimport useTransactions from '@/composables/useTransactions';\nimport { cowswapProtocolService } from '@/services/cowswap/cowswapProtocol.service';\nimport { signOrderCancellation } from '@/services/cowswap/signing';\nimport useWeb3 from '@/services/web3/useWeb3';\n\nimport ActivityCounter from './ActivityCounter.vue';\nimport ActivityRows from './ActivityRows.vue';\n\n/**\n * COMPOSABLES\n */\nconst { upToLargeBreakpoint, isMobile } = useBreakpoints();\nconst { account, getSigner } = useWeb3();\nconst { t } = useI18n();\n\nconst {\n  transactions,\n  pendingTransactions,\n  finalizedTransactions,\n  getExplorerLink,\n  clearAllTransactions,\n  isSuccessfulTransaction,\n  updateTransaction,\n  isPendingTransactionStatus,\n} = useTransactions();\n\nconst { addNotification } = useNotifications();\n\n/**\n * METHODS\n */\nasync function cancelOrder(orderId: string) {\n  try {\n    const { signature, signingScheme } = await signOrderCancellation(\n      orderId,\n      getSigner()\n    );\n\n    await cowswapProtocolService.sendSignedOrderCancellation({\n      cancellation: {\n        orderUid: orderId,\n        signature,\n        signingScheme,\n      },\n      owner: account.value,\n    });\n\n    updateTransaction(orderId, 'order', {\n      status: 'cancelling',\n    });\n  } catch (e) {\n    console.log(e);\n    addNotification({\n      type: 'error',\n      title: t('errorCancellingOrder'),\n      message: (e as Error).message,\n    });\n  }\n}\n</script>\n\n<template>\n  <BalPopover noPad :align=\"isMobile ? 'left' : undefined\">\n    <template #activator>\n      <BalBtn\n        color=\"white\"\n        :size=\"upToLargeBreakpoint ? 'md' : 'sm'\"\n        class=\"relative p-1\"\n        :circle=\"upToLargeBreakpoint\"\n      >\n        <ActivityIcon v-if=\"pendingTransactions.length === 0\" />\n        <ActivityCounter v-else :count=\"pendingTransactions.length\" />\n      </BalBtn>\n    </template>\n    <BalCard class=\"w-72\" noPad noBorder>\n      <template #header>\n        <div\n          class=\"flex justify-between items-center p-3 w-full border-b dark:border-gray-900\"\n        >\n          <h5>{{ $t('recentActivityTitle') }}</h5>\n        </div>\n      </template>\n      <div :class=\"['p-3', { 'h-72 overflow-auto': transactions.length > 5 }]\">\n        <template v-if=\"transactions.length > 0\">\n          <ActivityRows\n            :transactions=\"pendingTransactions\"\n            :getExplorerLink=\"getExplorerLink\"\n            :isSuccessfulTransaction=\"isSuccessfulTransaction\"\n            :isPendingTransactionStatus=\"isPendingTransactionStatus\"\n            :cancelOrder=\"cancelOrder\"\n          />\n          <div\n            v-if=\"\n              pendingTransactions.length > 0 && finalizedTransactions.length > 0\n            \"\n            class=\"my-3 h-px bg-gray-100 dark:bg-gray-700\"\n          />\n          <ActivityRows\n            :transactions=\"finalizedTransactions\"\n            :getExplorerLink=\"getExplorerLink\"\n            :isSuccessfulTransaction=\"isSuccessfulTransaction\"\n            :isPendingTransactionStatus=\"isPendingTransactionStatus\"\n            :cancelOrder=\"cancelOrder\"\n          />\n        </template>\n        <template v-else>\n          {{ $t('noRecentActivity') }}\n        </template>\n      </div>\n      <template v-if=\"transactions.length > 0\" #footer>\n        <div class=\"p-3 w-full text-sm bg-white dark:bg-gray-800 rounded-b-lg\">\n          <a class=\"text-blue-500\" @click=\"clearAllTransactions()\">\n            {{ $t('clearTransactions') }}\n          </a>\n        </div>\n      </template>\n    </BalCard>\n  </BalPopover>\n</template>\n\n\n","<script setup lang=\"ts\">\nimport { computed, ref, onMounted, watch } from 'vue';\nimport { useRouter } from 'vue-router';\n\nimport { useI18n } from 'vue-i18n';\nimport useBreakpoints from '@/composables/useBreakpoints';\nimport useNetwork from '@/composables/useNetwork';\nimport useNotifications from '@/composables/useNotifications';\nimport useWeb3 from '@/services/web3/useWeb3';\nimport { configService } from '@/services/config/config.service';\nimport config from '@/lib/config';\nimport { Config } from '@/lib/config/types';\nimport { buildNetworkIconURL } from '@/lib/utils/urls';\nimport { hardRedirectTo } from '@/plugins/router/nav-guards';\n\nexport interface NetworkOption {\n  id: string;\n  name: string;\n  networkSlug?: string;\n  key?: string;\n}\n\n// COMPOSABLES\nconst { upToLargeBreakpoint } = useBreakpoints();\nconst { networkId, networkConfig } = useNetwork();\nconst { chainId } = useWeb3();\nconst router = useRouter();\nconst { addNotification } = useNotifications();\nconst { t } = useI18n();\n\nfunction convertConfigToNetworkOption(config: Config): NetworkOption {\n  return {\n    id: config.slug,\n    name: config.chainName,\n    networkSlug: config.slug,\n    key: config.key,\n  };\n}\n\nconst prodNetworks: NetworkOption[] = Object.values(config)\n  .filter(config => config.visibleInUI && !config.testNetwork)\n  .map(convertConfigToNetworkOption);\n\nconst networks = ref(prodNetworks);\n\nconst testNetworks: NetworkOption[] = Object.values(config)\n  .filter(config => config.visibleInUI && config.testNetwork)\n  .map(convertConfigToNetworkOption);\n\nconst networksDev = ref(testNetworks);\n\n// COMPUTED\nconst allNetworks = computed(() => {\n  return networks.value.concat(\n    configService.env.APP_ENV === 'development' ||\n      configService.env.APP_ENV === 'staging'\n      ? networksDev.value\n      : []\n  );\n});\n\nconst appNetworkSupported = computed((): boolean => {\n  return allNetworks.value\n    .map(network => network.key)\n    .includes(networkId.value.toString());\n});\n\nconst activeNetwork = computed((): NetworkOption | undefined =>\n  allNetworks.value.find(network => {\n    if (!appNetworkSupported.value && network.id === 'ethereum') return true;\n    return isActive(network);\n  })\n);\n\n// LIFECYCLE\nonMounted(async () => {\n  await router.isReady();\n  if (router.currentRoute.value.query?.poolNetworkAlert) {\n    addNotification({\n      type: 'error',\n      title: '',\n      message: `${t('poolDoesntExist')} ${networkConfig.chainName}`,\n    });\n    router.replace({ query: {} });\n  }\n});\n\n// WATCHERS\nwatch(chainId, (newChainId, oldChainId) => {\n  if (\n    newChainId &&\n    oldChainId &&\n    oldChainId !== newChainId &&\n    networkId.value !== newChainId\n  ) {\n    const newNetwork = allNetworks.value.find(\n      n => Number(n.key) === newChainId\n    );\n    if (newNetwork) {\n      localStorage.setItem('networkId', newChainId.toString());\n      hardRedirectTo(getNetworkChangeUrl(newNetwork));\n    }\n  }\n});\n\n// METHODS\nfunction getNetworkChangeUrl(network: NetworkOption): string {\n  const routes = [\n    'pool',\n    'create-pool',\n    'add-liquidity',\n    'withdraw',\n    'migrate-pool',\n  ];\n  if (routes.includes(router.currentRoute.value.name?.toString() ?? '')) {\n    return `/#/${network.networkSlug}?poolNetworkAlert=true`;\n  }\n\n  const currentRoute = router.currentRoute.value;\n  return router.resolve({\n    name: currentRoute.name ?? 'home',\n    params: { ...currentRoute.params, networkSlug: network.networkSlug },\n    query: currentRoute.query,\n  }).href;\n}\n\nfunction isActive(network: NetworkOption): boolean {\n  if (!appNetworkSupported.value && network.id === 'ethereum') return true;\n  return networkId.value.toString() === network.key;\n}\n</script>\n\n<template>\n  <BalPopover noPad>\n    <template #activator>\n      <BalBtn color=\"white\" :size=\"upToLargeBreakpoint ? 'md' : 'sm'\">\n        <template v-if=\"activeNetwork\">\n          <img\n            :src=\"buildNetworkIconURL(activeNetwork.id)\"\n            :alt=\"activeNetwork.name\"\n            class=\"w-6 h-6 rounded-full\"\n          />\n          <span class=\"ml-2\">\n            {{ activeNetwork.name }}\n          </span>\n          <BalIcon name=\"chevron-down\" size=\"sm\" class=\"ml-2\" />\n        </template>\n      </BalBtn>\n    </template>\n    <div role=\"menu\" class=\"flex overflow-hidden flex-col w-56 rounded-lg\">\n      <div\n        class=\"py-2 px-3 text-sm font-medium text-gray-500 whitespace-nowrap bg-gray-50 dark:bg-gray-800 border-b dark:border-gray-900\"\n      >\n        {{ $t('networkSelection') }}:\n      </div>\n      <a\n        v-for=\"network in allNetworks\"\n        :key=\"network.id\"\n        :href=\"getNetworkChangeUrl(network)\"\n        class=\"flex justify-between items-center p-3 hover:bg-gray-50 dark:hover:bg-gray-850 cursor-pointer\"\n      >\n        <div class=\"flex items-center\">\n          <img\n            :src=\"buildNetworkIconURL(network.id)\"\n            :alt=\"network.name\"\n            class=\"mr-2 w-6 h-6 rounded-full\"\n          />\n          <span class=\"ml-1 font-medium\">\n            {{ network.name }}\n          </span>\n          <span\n            v-if=\"network.name === 'Avalanche'\"\n            class=\"py-0.5 px-1 ml-1.5 text-xs font-medium dark:text-black uppercase bg-yellow-500 rounded\"\n            >{{ $t('new') }}</span\n          >\n          <span\n            v-if=\"network.name === 'Base'\"\n            class=\"py-0.5 px-1 ml-1.5 text-xs font-medium dark:text-black uppercase bg-yellow-500 rounded\"\n            >{{ $t('new') }}</span\n          >\n        </div>\n        <BalIcon\n          v-if=\"isActive(network)\"\n          name=\"check\"\n          class=\"text-blue-500 dark:text-blue-400\"\n        />\n      </a>\n    </div>\n  </BalPopover>\n</template>\n","<script lang=\"ts\" setup>\nimport { computed } from 'vue';\n\nimport DarkModeToggle from '@/components/btns/DarkModeToggle.vue';\nimport useBreakpoints from '@/composables/useBreakpoints';\nimport { useSidebar } from '@/composables/useSidebar';\nimport useWeb3 from '@/services/web3/useWeb3';\n\nimport AppNavAccountBtn from './AppNavAccountBtn.vue';\nimport AppNavActivityBtn from './AppNavActivityBtn/AppNavActivityBtn.vue';\nimport AppNavNetworkSelect from './AppNavNetworkSelect.vue';\nimport { Goals, trackGoal } from '@/composables/useFathom';\n\n/**\n * COMPOSABLES\n */\nconst { isMobile, isDesktop } = useBreakpoints();\nconst { account, connector, startConnectWithInjectedProvider } = useWeb3();\nconst { setSidebarOpen } = useSidebar();\n\n/**\n * COMPUTED\n */\nconst hideNetworkSelect = computed(() => connector.value?.id === 'gnosis');\n\n/**\n * METHODS\n */\nfunction connectWalletHandler() {\n  trackGoal(Goals.ClickNavConnectWallet);\n  startConnectWithInjectedProvider();\n}\n</script>\n\n<template>\n  <div class=\"grid grid-rows-1 grid-flow-col gap-2\">\n    <DarkModeToggle v-if=\"isDesktop\" />\n    <AppNavActivityBtn v-if=\"account\" />\n    <AppNavAccountBtn v-if=\"account\" />\n    <BalBtn\n      v-else\n      color=\"white\"\n      :size=\"isMobile ? 'md' : 'sm'\"\n      @click=\"connectWalletHandler\"\n    >\n      <WalletIcon class=\"mr-2\" />\n      <span class=\"hidden lg:inline-block\" v-text=\"$t('connectWallet')\" />\n      <span class=\"lg:hidden\" v-text=\"$t('connect')\" />\n    </BalBtn>\n    <AppNavNetworkSelect v-if=\"!hideNetworkSelect\" />\n    <BalBtn\n      v-if=\"isMobile\"\n      color=\"white\"\n      flat\n      circle\n      @click=\"setSidebarOpen(true)\"\n    >\n      <BalIcon name=\"menu\" size=\"lg\" />\n    </BalBtn>\n  </div>\n</template>\n","export function extractPrefetchAssets(input: string | undefined) {\n  if (!input) return [];\n  // Detect strings between brackets\n  const matchArray = input.match(/\\[(.*?)\\]/);\n  if (!matchArray) return [];\n  return parse(matchArray[0]).map(asset => asset.replace('\"', ''));\n}\n\nfunction parse(match): any {\n  try {\n    return JSON.parse(match);\n  } catch (e) {\n    // If the match is not a valid JSON, we just ignore it\n    return [];\n  }\n}\n","import { router } from '.';\n\nexport interface RouteTo {\n  name?: string;\n}\n\nexport function resolveRoute(to: RouteTo) {\n  if (!to?.name) throw new Error(`Provided route (${to}) must have name`);\n  return router.resolve({ name: to.name, params: { networkSlug: 'ethereum' } })\n    .matched[0].components?.default;\n}\n","<script lang=\"ts\" setup>\nimport { extractPrefetchAssets } from '@/lib/utils/prefetch';\nimport { RouteTo, resolveRoute } from '@/plugins/router/route-resolver';\n\ninterface Props {\n  to: unknown;\n}\n\nconst props = defineProps<Props>();\n\n// This only works in production builds (use npm run build & npm run preview to test this feature)\n// More details: https://github.com/vitejs/vite/issues/10600\nconst stringifiedAssets = resolveRoute(props.to as RouteTo)?.toString();\n\nconst assets = extractPrefetchAssets(stringifiedAssets);\n\nfunction assetType(asset: string) {\n  return asset.endsWith('.css') ? 'style' : 'script';\n}\n</script>\n\n<template>\n  <link\n    v-for=\"asset in assets\"\n    :key=\"asset\"\n    rel=\"prefetch\"\n    :href=\"asset\"\n    :as=\"assetType(asset)\"\n  />\n</template>","<script lang=\"ts\" setup>\nimport { RouterLinkProps } from 'vue-router';\nimport PrefetchLinks from '@/components/links/PrefetchLinks.vue';\n\ninterface Props extends RouterLinkProps {\n  active: boolean;\n  prefetch?: boolean;\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  active: false,\n  prefetch: false,\n});\n\nconst classes = computed(() => ({\n  'border-white dark:border-gray-900': !props.active,\n  'border-blue-600 dark:border-blue-400 text-blue-700 dark:text-blue-400':\n    props.active,\n}));\n</script>\n\n<template>\n  <router-link v-bind=\"props\" :class=\"['desktop-link-item', classes]\">\n    <slot />\n    <PrefetchLinks v-if=\"prefetch\" :to=\"props.to\" />\n  </router-link>\n</template>\n\n<style scoped>\n.desktop-link-item {\n  @apply h-full flex-col justify-center cursor-pointer hover:text-purple-600 dark:hover:text-yellow-500 flex relative\n    overflow-hidden p-0 transition-all\n    ease-in-out duration-500;\n}\n\n.desktop-link-item::before {\n  content: '';\n\n  @apply top-0 left-0 w-full block absolute overflow-hidden transition-all;\n\n  border-top: 4px solid theme('colors.purple.600');\n  transform: translate3d(0%, -101%, 0);\n}\n\n.dark .desktop-link-item::before {\n  border-color: theme('colors.yellow.500');\n}\n\n.desktop-link-item.router-link-active::before {\n  content: '';\n  border-color: theme('colors.blue.600');\n\n  @apply w-full block absolute top-0 left-0;\n\n  transform: translate3d(0, 0, 0);\n}\n\n.dark .desktop-link-item.router-link-active::before {\n  content: '';\n  border-color: theme('colors.blue.400');\n}\n\n.desktop-link-item.router-link-active:hover::before {\n  border-color: theme('colors.blue.700');\n}\n\n.dark .desktop-link-item.router-link-active:hover::before {\n  border-color: theme('colors.blue.300');\n}\n\n.desktop-link-item.router-link-active {\n  @apply text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 transition-colors;\n}\n\n.desktop-link-item:hover::before {\n  transform: translate3d(0, 0, 0);\n}\n</style>\n","<script lang=\"ts\" setup>\nimport { useRoute } from 'vue-router';\nimport DesktopLinkItem from './DesktopLinkItem.vue';\nimport useNetwork, { isTestnet } from '@/composables/useNetwork';\nimport { Goals, trackGoal } from '@/composables/useFathom';\nimport { isVeBalSupported } from '@/composables/useVeBAL';\n\n/**\n * COMPOSABLES\n */\nconst route = useRoute();\nconst { networkSlug } = useNetwork();\n\n/**\n * METHODS\n */\nfunction isActive(page: string): boolean {\n  if (route.name === page) return true;\n  return false;\n}\n</script>\n\n<template>\n  <div class=\"desktop-links\">\n    <DesktopLinkItem\n      :to=\"{ name: 'home', params: { networkSlug } }\"\n      :active=\"isActive('home')\"\n      prefetch\n      @click=\"trackGoal(Goals.ClickNavPools)\"\n    >\n      {{ $t('pool') }}\n    </DesktopLinkItem>\n    <DesktopLinkItem\n      :to=\"{ name: 'swap', params: { networkSlug } }\"\n      :active=\"isActive('swap')\"\n      prefetch\n      @click=\"trackGoal(Goals.ClickNavSwap)\"\n    >\n      {{ $t('swap') }}\n    </DesktopLinkItem>\n    <DesktopLinkItem\n      v-if=\"isVeBalSupported\"\n      :to=\"{ name: 'claim', params: { networkSlug } }\"\n      :active=\"isActive('claim')\"\n      prefetch\n      @click=\"trackGoal(Goals.ClickNavClaim)\"\n    >\n      <div class=\"flex items-center\">\n        {{ $t('claim') }}\n      </div>\n    </DesktopLinkItem>\n    <DesktopLinkItem\n      v-if=\"isTestnet\"\n      :to=\"{ name: 'faucet', params: { networkSlug } }\"\n      :active=\"isActive('faucet')\"\n    >\n      Faucet\n    </DesktopLinkItem>\n    <DesktopLinkItem\n      :to=\"{ name: 'portfolio', params: { networkSlug } }\"\n      :active=\"isActive('portfolio')\"\n      prefetch\n      @click=\"trackGoal(Goals.ClickNavPortfolio)\"\n    >\n      {{ $t('portfolio') }}\n    </DesktopLinkItem>\n    <DesktopLinkItem\n      v-if=\"isVeBalSupported\"\n      :to=\"{ name: 'vebal', params: { networkSlug } }\"\n      :active=\"isActive('vebal')\"\n      prefetch\n      @click=\"trackGoal(Goals.ClickNavVebal)\"\n    >\n      vTSYMM\n    </DesktopLinkItem>\n  </div>\n</template>\n\n<style scoped>\n.desktop-links {\n  @apply grid gap-6 grid-flow-col grid-rows-1 h-full content-center;\n}\n</style>\n","<script lang=\"ts\" setup>\nimport { onMounted, onUnmounted, ref } from 'vue';\n\nimport AppIcon from '@/components/images/AppIcon.vue';\nimport AppLogo from '@/components/images/AppLogo.vue';\nimport useAlerts from '@/composables/useAlerts';\nimport useBreakpoints from '@/composables/useBreakpoints';\nimport useFathom from '@/composables/useFathom';\nimport useNetwork from '@/composables/useNetwork';\n\nimport AppNavActions from './AppNavActions.vue';\nimport AppNavAlert from './AppNavAlert.vue';\nimport DesktopLinks from './DesktopLinks/DesktopLinks.vue';\n\n/**\n * STATE\n */\nconst appNav = ref<HTMLDivElement>();\n\n/**\n * COMPOSABLES\n */\nconst { bp, isDesktop } = useBreakpoints();\nconst { trackGoal, Goals } = useFathom();\nconst { currentAlert } = useAlerts();\nconst { networkSlug } = useNetwork();\n\n/**\n * METHODS\n */\nfunction handleScroll() {\n  if (!appNav.value) return;\n\n  if (window.scrollY === 0) {\n    appNav.value.classList.remove('shadow-lg');\n  } else {\n    appNav.value.classList.add('shadow-lg');\n  }\n}\n\n/**\n * LIFECYCLE\n */\nonMounted(() => {\n  window.addEventListener('scroll', handleScroll);\n});\n\nonUnmounted(() => {\n  window.removeEventListener('scroll', handleScroll);\n});\n</script>\n\n<template>\n  <AppNavAlert v-if=\"currentAlert\" :alert=\"currentAlert\" />\n  <nav id=\"app-nav\" ref=\"appNav\" class=\"sticky top-0 lg:px-6 pr-1 pl-4 h-20\">\n    <div class=\"flex justify-between items-center h-full\">\n      <div class=\"flex items-center h-full\">\n        <router-link\n          :to=\"{ name: 'home', params: { networkSlug } }\"\n          @click=\"trackGoal(Goals.ClickNavLogo)\"\n        >\n          <AppIcon v-if=\"['xs', 'sm'].includes(bp)\" />\n          <AppLogo v-else />\n        </router-link>\n\n        <DesktopLinks v-if=\"isDesktop\" class=\"ml-8 font-medium\" />\n      </div>\n\n      <AppNavActions />\n    </div>\n  </nav>\n</template>\n\n<style scoped>\n#app-nav {\n  @apply w-full z-30;\n  @apply bg-white dark:bg-gray-900;\n  @apply border-b border-transparent;\n\n  transition: all 0.2s ease-in-out;\n}\n</style>\n"],"names":["_sfc_main","_hoisted_2","_withScopeId","_createElementVNode","_openBlock","_createElementBlock","_hoisted_1","_hoisted_4","networkSlug","useNetwork","handleThirdPartyModalToggle","useThirdPartyServices","_imports_0","darkMode","useDarkMode","useDarkLogo","computed","props","_sfc_render","_ctx","_cache","isMobile","useBreakpoints","toggleDarkMode","setDarkMode","account","profile","disconnectWallet","toggleWalletSelectModal","connector","provider","userNetworkConfig","isUnsupportedNetwork","explorerLinks","useWeb3","ethereumTxType","setEthereumTxType","useEthereumTxType","supportSignatures","setSupportSignatures","useUserSettings","data","reactive","avatarUri","_a","networkColorClass","color","Network","networkName","connectorName","getConnectorName","connectorLogo","getConnectorLogo","hideDisconnect","copyAddress","bp","upToLargeBreakpoint","isLoadingProfile","avatarSize","_sfc_main$9","defineComponent","__unplugin_components_0","_toDisplayString","_hoisted_3","disablePending","getSigner","t","useI18n","transactions","pendingTransactions","finalizedTransactions","getExplorerLink","clearAllTransactions","isSuccessfulTransaction","updateTransaction","isPendingTransactionStatus","useTransactions","addNotification","useNotifications","cancelOrder","orderId","signature","signingScheme","signOrderCancellation","cowswapProtocolService","e","networkId","networkConfig","chainId","router","useRouter","convertConfigToNetworkOption","config2","prodNetworks","config","networks","ref","testNetworks","networksDev","allNetworks","configService","appNetworkSupported","network","activeNetwork","isActive","onMounted","watch","newChainId","oldChainId","newNetwork","n","hardRedirectTo","getNetworkChangeUrl","currentRoute","isDesktop","startConnectWithInjectedProvider","setSidebarOpen","useSidebar","hideNetworkSelect","connectWalletHandler","trackGoal","Goals","extractPrefetchAssets","input","matchArray","parse","asset","match","resolveRoute","to","stringifiedAssets","assets","assetType","classes","route","useRoute","page","appNav","useFathom","currentAlert","useAlerts","handleScroll","onUnmounted"],"mappings":"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"}