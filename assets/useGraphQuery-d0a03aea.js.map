{"version":3,"file":"useGraphQuery-d0a03aea.js","sources":["../../src/composables/queries/useGraphQuery.ts"],"sourcesContent":["import axios from 'axios';\nimport { jsonToGraphQLQuery } from 'json-to-graphql-query';\nimport { initial, last } from 'lodash';\nimport { reactive } from 'vue';\nimport { useQuery, UseQueryOptions, QueryKey } from '@tanstack/vue-query';\n\nimport { configService } from '@/services/config/config.service';\nimport { subgraphFallbackService } from '@/services/balancer/subgraph/subgraph-fallback.service';\n\nexport const subgraphs = {\n  gauge: configService.network.subgraphs.gauge,\n};\n\nexport default function useGraphQuery<T>(\n  subgraphUrl: string,\n  key: QueryKey,\n  query: () => Record<any, any>,\n  options: UseQueryOptions<T> = {},\n  shouldUseSubgraphFallbackUrl?: boolean\n) {\n  const queryKey = reactive([\n    // for our query key style, initial are the string\n    // fragments of the query key\n    ...initial(key),\n    // the last one is the list of dependencies for the query\n    {\n      // extend the dependencies from the query key and add\n      // the current query key as a dependency\n      ...(last(key) as any),\n    },\n  ]);\n\n  const queryFn = async () => {\n    if (!subgraphUrl) {\n      throw new Error(`A graphQL endpoint wasn't supplied for this query`);\n    }\n\n    const payload = {\n      query: jsonToGraphQLQuery({ query: query() }),\n    };\n\n    try {\n      if (shouldUseSubgraphFallbackUrl) {\n        const response = await subgraphFallbackService.get(payload);\n        return response?.data.data;\n      }\n      const {\n        data: { data },\n      } = await axios.post(subgraphUrl, {\n        query: jsonToGraphQLQuery({ query: query() }),\n      });\n\n      return data;\n    } catch (error) {\n      console.error(\n        `GraphQL request to [${subgraphUrl}] failed. Payload:`,\n        query,\n        'Error:',\n        error\n      );\n      throw error;\n    }\n  };\n\n  return useQuery<T>(queryKey, queryFn, options);\n}\n"],"names":["subgraphs","configService","useGraphQuery","subgraphUrl","key","query","options","shouldUseSubgraphFallbackUrl","queryKey","reactive","initial","last","useQuery","payload","jsonToGraphQLQuery","response","subgraphFallbackService","data","axios","error"],"mappings":"8QASO,MAAMA,EAAY,CACvB,MAAOC,EAAc,QAAQ,UAAU,KACzC,EAEA,SAAwBC,EACtBC,EACAC,EACAC,EACAC,EAA8B,GAC9BC,EACA,CACA,MAAMC,EAAWC,EAAS,CAGxB,GAAGC,EAAAA,QAAQN,CAAG,EAEd,CAGE,GAAIO,EAAAA,KAAKP,CAAG,CACd,CAAA,CACD,EAkCM,OAAAQ,EAAYJ,EAhCH,SAAY,CAC1B,GAAI,CAACL,EACG,MAAA,IAAI,MAAM,mDAAmD,EAGrE,MAAMU,EAAU,CACd,MAAOC,EAAAA,mBAAmB,CAAE,MAAOT,IAAS,CAAA,EAG1C,GAAA,CACF,GAAIE,EAA8B,CAChC,MAAMQ,EAAW,MAAMC,EAAwB,IAAIH,CAAO,EAC1D,OAAOE,GAAA,YAAAA,EAAU,KAAK,IACxB,CACM,KAAA,CACJ,KAAM,CAAE,KAAAE,CAAK,CAAA,EACX,MAAMC,EAAM,KAAKf,EAAa,CAChC,MAAOW,EAAAA,mBAAmB,CAAE,MAAOT,IAAS,CAAA,CAC7C,EAEM,OAAAY,QACAE,GACC,cAAA,MACN,uBAAuBhB,sBACvBE,EACA,SACAc,CAAA,EAEIA,CACR,CAAA,EAGoCb,CAAO,CAC/C"}